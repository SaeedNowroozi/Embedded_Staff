
USB.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000014ac  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000e4  0800165c  0800165c  0001165c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001740  08001740  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  08001740  08001740  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001740  08001740  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001740  08001740  00011740  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001744  08001744  00011744  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  08001748  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020068  2**0
                  CONTENTS
 10 .bss          00000038  20000068  20000068  00020068  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200000a0  200000a0  00020068  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001c6c  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000069a  00000000  00000000  00021d04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000128  00000000  00000000  000223a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000d0  00000000  00000000  000224c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019472  00000000  00000000  00022598  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001bf3  00000000  00000000  0003ba0a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008c86f  00000000  00000000  0003d5fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000c9e6c  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000c0c  00000000  00000000  000c9ec0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .stab         00000084  00000000  00000000  000caacc  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .stabstr      00000117  00000000  00000000  000cab50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000068 	.word	0x20000068
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001644 	.word	0x08001644

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000006c 	.word	0x2000006c
 80001ec:	08001644 	.word	0x08001644

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000298:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800029c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002a0:	f003 0301 	and.w	r3, r3, #1
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d013      	beq.n	80002d0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ac:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002b0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d00b      	beq.n	80002d0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002b8:	e000      	b.n	80002bc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002ba:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002c6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	b2d2      	uxtb	r2, r2
 80002ce:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	370c      	adds	r7, #12
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr

080002de <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80002de:	b580      	push	{r7, lr}
 80002e0:	b086      	sub	sp, #24
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ea:	2300      	movs	r3, #0
 80002ec:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e009      	b.n	8000308 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	4618      	mov	r0, r3
 80002fe:	f7ff ffc7 	bl	8000290 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf1      	blt.n	80002f4 <_write+0x16>

  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	4618      	mov	r0, r3
 8000314:	3718      	adds	r7, #24
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}
	...

0800031c <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 800031c:	b480      	push	{r7}
 800031e:	b083      	sub	sp, #12
 8000320:	af00      	add	r7, sp, #0
 8000322:	4603      	mov	r3, r0
 8000324:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 8000326:	79fb      	ldrb	r3, [r7, #7]
 8000328:	2b02      	cmp	r3, #2
 800032a:	d00a      	beq.n	8000342 <_get_log_level_string+0x26>
 800032c:	2b02      	cmp	r3, #2
 800032e:	dc0a      	bgt.n	8000346 <_get_log_level_string+0x2a>
 8000330:	2b00      	cmp	r3, #0
 8000332:	d002      	beq.n	800033a <_get_log_level_string+0x1e>
 8000334:	2b01      	cmp	r3, #1
 8000336:	d002      	beq.n	800033e <_get_log_level_string+0x22>
 8000338:	e005      	b.n	8000346 <_get_log_level_string+0x2a>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 800033a:	4b06      	ldr	r3, [pc, #24]	; (8000354 <_get_log_level_string+0x38>)
 800033c:	e003      	b.n	8000346 <_get_log_level_string+0x2a>
        case LOG_LEVEL_INFORMATION:
            return "INFO";
 800033e:	4b06      	ldr	r3, [pc, #24]	; (8000358 <_get_log_level_string+0x3c>)
 8000340:	e001      	b.n	8000346 <_get_log_level_string+0x2a>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 8000342:	4b06      	ldr	r3, [pc, #24]	; (800035c <_get_log_level_string+0x40>)
 8000344:	e7ff      	b.n	8000346 <_get_log_level_string+0x2a>
    }
}
 8000346:	4618      	mov	r0, r3
 8000348:	370c      	adds	r7, #12
 800034a:	46bd      	mov	sp, r7
 800034c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000350:	4770      	bx	lr
 8000352:	bf00      	nop
 8000354:	0800165c 	.word	0x0800165c
 8000358:	08001664 	.word	0x08001664
 800035c:	0800166c 	.word	0x0800166c

08000360 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args)
{
 8000360:	b580      	push	{r7, lr}
 8000362:	b084      	sub	sp, #16
 8000364:	af00      	add	r7, sp, #0
 8000366:	4603      	mov	r3, r0
 8000368:	60b9      	str	r1, [r7, #8]
 800036a:	607a      	str	r2, [r7, #4]
 800036c:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level)
 800036e:	4b0f      	ldr	r3, [pc, #60]	; (80003ac <_log+0x4c>)
 8000370:	781b      	ldrb	r3, [r3, #0]
 8000372:	7bfa      	ldrb	r2, [r7, #15]
 8000374:	429a      	cmp	r2, r3
 8000376:	d814      	bhi.n	80003a2 <_log+0x42>
        return;

	printf("[%s] ", _get_log_level_string(log_level));
 8000378:	7bfb      	ldrb	r3, [r7, #15]
 800037a:	4618      	mov	r0, r3
 800037c:	f7ff ffce 	bl	800031c <_get_log_level_string>
 8000380:	4603      	mov	r3, r0
 8000382:	4619      	mov	r1, r3
 8000384:	480a      	ldr	r0, [pc, #40]	; (80003b0 <_log+0x50>)
 8000386:	f000 fc61 	bl	8000c4c <iprintf>
	vfprintf(stdout, format, args);
 800038a:	4b0a      	ldr	r3, [pc, #40]	; (80003b4 <_log+0x54>)
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	689b      	ldr	r3, [r3, #8]
 8000390:	687a      	ldr	r2, [r7, #4]
 8000392:	68b9      	ldr	r1, [r7, #8]
 8000394:	4618      	mov	r0, r3
 8000396:	f000 fabb 	bl	8000910 <vfiprintf>
	printf("\n");
 800039a:	200a      	movs	r0, #10
 800039c:	f000 fc6e 	bl	8000c7c <putchar>
 80003a0:	e000      	b.n	80003a4 <_log+0x44>
        return;
 80003a2:	bf00      	nop
}
 80003a4:	3710      	adds	r7, #16
 80003a6:	46bd      	mov	sp, r7
 80003a8:	bd80      	pop	{r7, pc}
 80003aa:	bf00      	nop
 80003ac:	20000000 	.word	0x20000000
 80003b0:	08001674 	.word	0x08001674
 80003b4:	20000004 	.word	0x20000004

080003b8 <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 80003b8:	b40f      	push	{r0, r1, r2, r3}
 80003ba:	b580      	push	{r7, lr}
 80003bc:	b082      	sub	sp, #8
 80003be:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80003c0:	f107 0314 	add.w	r3, r7, #20
 80003c4:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFORMATION, format, args);
 80003c6:	687a      	ldr	r2, [r7, #4]
 80003c8:	6939      	ldr	r1, [r7, #16]
 80003ca:	2001      	movs	r0, #1
 80003cc:	f7ff ffc8 	bl	8000360 <_log>
    va_end(args);
}
 80003d0:	bf00      	nop
 80003d2:	3708      	adds	r7, #8
 80003d4:	46bd      	mov	sp, r7
 80003d6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003da:	b004      	add	sp, #16
 80003dc:	4770      	bx	lr
	...

080003e0 <main>:
#include "stm32f4xx.h"
#include "Helper/logger.h"
#include "usbd_framework.h"

int main(void)
{
 80003e0:	b580      	push	{r7, lr}
 80003e2:	af00      	add	r7, sp, #0
   log_info("Info Encro");
 80003e4:	4802      	ldr	r0, [pc, #8]	; (80003f0 <main+0x10>)
 80003e6:	f7ff ffe7 	bl	80003b8 <log_info>
   usbd_initialize();
 80003ea:	f000 f8d7 	bl	800059c <usbd_initialize>
	for(;;);
 80003ee:	e7fe      	b.n	80003ee <main+0xe>
 80003f0:	0800169c 	.word	0x0800169c

080003f4 <configure_clock>:

LogLevel system_log_level = LOG_LEVEL_DEBUG;
uint32_t SystemCoreClock = 72000000; // 72 MHz

static void configure_clock()
{
 80003f4:	b480      	push	{r7}
 80003f6:	af00      	add	r7, sp, #0
	// Configures flash latency.
	MODIFY_REG(FLASH->ACR,
 80003f8:	4b25      	ldr	r3, [pc, #148]	; (8000490 <configure_clock+0x9c>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	f023 0307 	bic.w	r3, r3, #7
 8000400:	4a23      	ldr	r2, [pc, #140]	; (8000490 <configure_clock+0x9c>)
 8000402:	f043 0302 	orr.w	r3, r3, #2
 8000406:	6013      	str	r3, [r2, #0]
		FLASH_ACR_LATENCY,
		_VAL2FLD(FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_2WS) //FLASH_ACR_LATENCY_2WS << FLASH_ACR_LATENCY_Pos
	);

	// Enables HSE.
	SET_BIT(RCC->CR, RCC_CR_HSEON);
 8000408:	4b22      	ldr	r3, [pc, #136]	; (8000494 <configure_clock+0xa0>)
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	4a21      	ldr	r2, [pc, #132]	; (8000494 <configure_clock+0xa0>)
 800040e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000412:	6013      	str	r3, [r2, #0]

	// Waits until HSE is stable.
	while (!READ_BIT(RCC->CR, RCC_CR_HSERDY));
 8000414:	bf00      	nop
 8000416:	4b1f      	ldr	r3, [pc, #124]	; (8000494 <configure_clock+0xa0>)
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800041e:	2b00      	cmp	r3, #0
 8000420:	d0f9      	beq.n	8000416 <configure_clock+0x22>

	// Configures PLL: source = HSE, PLLCLK = 72MHz.
	MODIFY_REG(RCC->PLLCFGR,
 8000422:	4b1c      	ldr	r3, [pc, #112]	; (8000494 <configure_clock+0xa0>)
 8000424:	685b      	ldr	r3, [r3, #4]
 8000426:	4a1c      	ldr	r2, [pc, #112]	; (8000498 <configure_clock+0xa4>)
 8000428:	401a      	ands	r2, r3
 800042a:	491a      	ldr	r1, [pc, #104]	; (8000494 <configure_clock+0xa0>)
 800042c:	4b1b      	ldr	r3, [pc, #108]	; (800049c <configure_clock+0xa8>)
 800042e:	4313      	orrs	r3, r2
 8000430:	604b      	str	r3, [r1, #4]
		RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLP,
		_VAL2FLD(RCC_PLLCFGR_PLLM, 4) | _VAL2FLD(RCC_PLLCFGR_PLLN, 72) | _VAL2FLD(RCC_PLLCFGR_PLLQ, 3) | RCC_PLLCFGR_PLLSRC_HSE
	);

	// Enables PLL module.
	SET_BIT(RCC->CR, RCC_CR_PLLON);
 8000432:	4b18      	ldr	r3, [pc, #96]	; (8000494 <configure_clock+0xa0>)
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	4a17      	ldr	r2, [pc, #92]	; (8000494 <configure_clock+0xa0>)
 8000438:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800043c:	6013      	str	r3, [r2, #0]

	// Waits until PLL is stable.
	while (!READ_BIT(RCC->CR, RCC_CR_PLLRDY));
 800043e:	bf00      	nop
 8000440:	4b14      	ldr	r3, [pc, #80]	; (8000494 <configure_clock+0xa0>)
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000448:	2b00      	cmp	r3, #0
 800044a:	d0f9      	beq.n	8000440 <configure_clock+0x4c>

	// Switches system clock to PLL.
	MODIFY_REG(RCC->CFGR,
 800044c:	4b11      	ldr	r3, [pc, #68]	; (8000494 <configure_clock+0xa0>)
 800044e:	689b      	ldr	r3, [r3, #8]
 8000450:	f023 0303 	bic.w	r3, r3, #3
 8000454:	4a0f      	ldr	r2, [pc, #60]	; (8000494 <configure_clock+0xa0>)
 8000456:	f043 0302 	orr.w	r3, r3, #2
 800045a:	6093      	str	r3, [r2, #8]
		RCC_CFGR_SW,
		_VAL2FLD(RCC_CFGR_SW, RCC_CFGR_SW_PLL)
	);

	// Configures PPRE1 = 2, (PPRE2 = 1, HPRE = 1 by default).
	MODIFY_REG(RCC->CFGR,
 800045c:	4b0d      	ldr	r3, [pc, #52]	; (8000494 <configure_clock+0xa0>)
 800045e:	689b      	ldr	r3, [r3, #8]
 8000460:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000464:	4a0b      	ldr	r2, [pc, #44]	; (8000494 <configure_clock+0xa0>)
 8000466:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800046a:	6093      	str	r3, [r2, #8]
		RCC_CFGR_PPRE1,
		_VAL2FLD(RCC_CFGR_PPRE1, 4)
	);

	// Waits until PLL is used.
	while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 800046c:	bf00      	nop
 800046e:	4b09      	ldr	r3, [pc, #36]	; (8000494 <configure_clock+0xa0>)
 8000470:	689b      	ldr	r3, [r3, #8]
 8000472:	f003 030c 	and.w	r3, r3, #12
 8000476:	2b08      	cmp	r3, #8
 8000478:	d1f9      	bne.n	800046e <configure_clock+0x7a>

	// Disables HSI.
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 800047a:	4b06      	ldr	r3, [pc, #24]	; (8000494 <configure_clock+0xa0>)
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	4a05      	ldr	r2, [pc, #20]	; (8000494 <configure_clock+0xa0>)
 8000480:	f023 0301 	bic.w	r3, r3, #1
 8000484:	6013      	str	r3, [r2, #0]
}
 8000486:	bf00      	nop
 8000488:	46bd      	mov	sp, r7
 800048a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048e:	4770      	bx	lr
 8000490:	40023c00 	.word	0x40023c00
 8000494:	40023800 	.word	0x40023800
 8000498:	f0bc8000 	.word	0xf0bc8000
 800049c:	03401204 	.word	0x03401204

080004a0 <SystemInit>:
		_VAL2FLD(GPIO_MODER_MODER8, 2)
	);
}

void SystemInit(void)
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	af00      	add	r7, sp, #0
//	configure_mco1();
	configure_clock();
 80004a4:	f7ff ffa6 	bl	80003f4 <configure_clock>
}
 80004a8:	bf00      	nop
 80004aa:	bd80      	pop	{r7, pc}

080004ac <initialize_gpio_pins>:

#include "usbd_driver.h"

 void initialize_gpio_pins()
{
 80004ac:	b480      	push	{r7}
 80004ae:	af00      	add	r7, sp, #0
	// Enables the clock for GPIOB.
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOBEN);
 80004b0:	4b0d      	ldr	r3, [pc, #52]	; (80004e8 <initialize_gpio_pins+0x3c>)
 80004b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b4:	4a0c      	ldr	r2, [pc, #48]	; (80004e8 <initialize_gpio_pins+0x3c>)
 80004b6:	f043 0302 	orr.w	r3, r3, #2
 80004ba:	6313      	str	r3, [r2, #48]	; 0x30

	// Sets alternate function 12 for: PB14 (-), and PB15 (+).
	MODIFY_REG(GPIOB->AFR[1],
 80004bc:	4b0b      	ldr	r3, [pc, #44]	; (80004ec <initialize_gpio_pins+0x40>)
 80004be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004c0:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80004c4:	4a09      	ldr	r2, [pc, #36]	; (80004ec <initialize_gpio_pins+0x40>)
 80004c6:	f043 434c 	orr.w	r3, r3, #3422552064	; 0xcc000000
 80004ca:	6253      	str	r3, [r2, #36]	; 0x24
		GPIO_AFRH_AFSEL14 | GPIO_AFRH_AFSEL15,
		_VAL2FLD(GPIO_AFRH_AFSEL14, 0xC) | _VAL2FLD(GPIO_AFRH_AFSEL15, 0xC)
	);

	// Configures USB pins (in GPIOB) to work in alternate function mode.
	MODIFY_REG(GPIOB->MODER,
 80004cc:	4b07      	ldr	r3, [pc, #28]	; (80004ec <initialize_gpio_pins+0x40>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 80004d4:	4a05      	ldr	r2, [pc, #20]	; (80004ec <initialize_gpio_pins+0x40>)
 80004d6:	f043 4320 	orr.w	r3, r3, #2684354560	; 0xa0000000
 80004da:	6013      	str	r3, [r2, #0]
		GPIO_MODER_MODER14 | GPIO_MODER_MODER15,
		_VAL2FLD(GPIO_MODER_MODER14, 2) | _VAL2FLD(GPIO_MODER_MODER15, 2)
	);
}
 80004dc:	bf00      	nop
 80004de:	46bd      	mov	sp, r7
 80004e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e4:	4770      	bx	lr
 80004e6:	bf00      	nop
 80004e8:	40023800 	.word	0x40023800
 80004ec:	40020400 	.word	0x40020400

080004f0 <initialize_core>:

void initialize_core()
{
 80004f0:	b480      	push	{r7}
 80004f2:	af00      	add	r7, sp, #0
	// Enables the clock for USB core.
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_OTGHSEN);
 80004f4:	4b19      	ldr	r3, [pc, #100]	; (800055c <initialize_core+0x6c>)
 80004f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004f8:	4a18      	ldr	r2, [pc, #96]	; (800055c <initialize_core+0x6c>)
 80004fa:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80004fe:	6313      	str	r3, [r2, #48]	; 0x30

	// Configures the USB core to run in device mode, and to use the embedded full-speed PHY.
	MODIFY_REG(USB_OTG_HS->GUSBCFG,
 8000500:	4b17      	ldr	r3, [pc, #92]	; (8000560 <initialize_core+0x70>)
 8000502:	68db      	ldr	r3, [r3, #12]
 8000504:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8000508:	f423 5371 	bic.w	r3, r3, #15424	; 0x3c40
 800050c:	4a14      	ldr	r2, [pc, #80]	; (8000560 <initialize_core+0x70>)
 800050e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000512:	f443 5311 	orr.w	r3, r3, #9280	; 0x2440
 8000516:	60d3      	str	r3, [r2, #12]
		USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | USB_OTG_GUSBCFG_TRDT,
		USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | _VAL2FLD(USB_OTG_GUSBCFG_TRDT, 0x09)
	);

	// Configures the device to run in full speed mode.
	MODIFY_REG(USB_OTG_HS_DEVICE->DCFG,
 8000518:	4b12      	ldr	r3, [pc, #72]	; (8000564 <initialize_core+0x74>)
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	4a11      	ldr	r2, [pc, #68]	; (8000564 <initialize_core+0x74>)
 800051e:	f043 0303 	orr.w	r3, r3, #3
 8000522:	6013      	str	r3, [r2, #0]
		USB_OTG_DCFG_DSPD,
		_VAL2FLD(USB_OTG_DCFG_DSPD, 0x03)
	);

	// Enables VBUS sensing device.
	SET_BIT(USB_OTG_HS->GCCFG, USB_OTG_GCCFG_VBUSBSEN);
 8000524:	4b0e      	ldr	r3, [pc, #56]	; (8000560 <initialize_core+0x70>)
 8000526:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000528:	4a0d      	ldr	r2, [pc, #52]	; (8000560 <initialize_core+0x70>)
 800052a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800052e:	6393      	str	r3, [r2, #56]	; 0x38

	// Unmasks the main USB core interrupts.
	SET_BIT(USB_OTG_HS->GINTMSK,
 8000530:	4b0b      	ldr	r3, [pc, #44]	; (8000560 <initialize_core+0x70>)
 8000532:	699a      	ldr	r2, [r3, #24]
 8000534:	490a      	ldr	r1, [pc, #40]	; (8000560 <initialize_core+0x70>)
 8000536:	4b0c      	ldr	r3, [pc, #48]	; (8000568 <initialize_core+0x78>)
 8000538:	4313      	orrs	r3, r2
 800053a:	618b      	str	r3, [r1, #24]
	);



	// Clears all pending core interrupts.
	WRITE_REG(USB_OTG_HS->GINTSTS, 0xFFFFFFFF);
 800053c:	4b08      	ldr	r3, [pc, #32]	; (8000560 <initialize_core+0x70>)
 800053e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000542:	615a      	str	r2, [r3, #20]
//
	// Unmasks USB global interrupt.
	SET_BIT(USB_OTG_HS->GAHBCFG, USB_OTG_GAHBCFG_GINT);
 8000544:	4b06      	ldr	r3, [pc, #24]	; (8000560 <initialize_core+0x70>)
 8000546:	689b      	ldr	r3, [r3, #8]
 8000548:	4a05      	ldr	r2, [pc, #20]	; (8000560 <initialize_core+0x70>)
 800054a:	f043 0301 	orr.w	r3, r3, #1
 800054e:	6093      	str	r3, [r2, #8]
//
//	// Unmasks transfer completed interrupts for all endpoints.
//	SET_BIT(USB_OTG_HS_DEVICE->DOEPMSK, USB_OTG_DOEPMSK_XFRCM);
//	SET_BIT(USB_OTG_HS_DEVICE->DIEPMSK, USB_OTG_DIEPMSK_XFRCM);
}
 8000550:	bf00      	nop
 8000552:	46bd      	mov	sp, r7
 8000554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000558:	4770      	bx	lr
 800055a:	bf00      	nop
 800055c:	40023800 	.word	0x40023800
 8000560:	40040000 	.word	0x40040000
 8000564:	40040800 	.word	0x40040800
 8000568:	800c3818 	.word	0x800c3818

0800056c <connect>:
//}

/** \brief Connects the USB device to the bus.
 */
void connect()
{
 800056c:	b480      	push	{r7}
 800056e:	af00      	add	r7, sp, #0
	// Powers the transceivers on.
    SET_BIT(USB_OTG_HS->GCCFG, USB_OTG_GCCFG_PWRDWN);
 8000570:	4b08      	ldr	r3, [pc, #32]	; (8000594 <connect+0x28>)
 8000572:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000574:	4a07      	ldr	r2, [pc, #28]	; (8000594 <connect+0x28>)
 8000576:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800057a:	6393      	str	r3, [r2, #56]	; 0x38

	// Connects the device to the bus.
    CLEAR_BIT(USB_OTG_HS_DEVICE->DCTL, USB_OTG_DCTL_SDIS);
 800057c:	4b06      	ldr	r3, [pc, #24]	; (8000598 <connect+0x2c>)
 800057e:	685b      	ldr	r3, [r3, #4]
 8000580:	4a05      	ldr	r2, [pc, #20]	; (8000598 <connect+0x2c>)
 8000582:	f023 0302 	bic.w	r3, r3, #2
 8000586:	6053      	str	r3, [r2, #4]
}
 8000588:	bf00      	nop
 800058a:	46bd      	mov	sp, r7
 800058c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop
 8000594:	40040000 	.word	0x40040000
 8000598:	40040800 	.word	0x40040800

0800059c <usbd_initialize>:
#include "usbd_framework.h"

void usbd_initialize()
{
 800059c:	b580      	push	{r7, lr}
 800059e:	af00      	add	r7, sp, #0
	initialize_gpio_pins();
 80005a0:	f7ff ff84 	bl	80004ac <initialize_gpio_pins>
	initialize_core();
 80005a4:	f7ff ffa4 	bl	80004f0 <initialize_core>
	connect();
 80005a8:	f7ff ffe0 	bl	800056c <connect>
}
 80005ac:	bf00      	nop
 80005ae:	bd80      	pop	{r7, pc}

080005b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005b0:	480d      	ldr	r0, [pc, #52]	; (80005e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005b2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005b4:	f7ff ff74 	bl	80004a0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005b8:	480c      	ldr	r0, [pc, #48]	; (80005ec <LoopForever+0x6>)
  ldr r1, =_edata
 80005ba:	490d      	ldr	r1, [pc, #52]	; (80005f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005bc:	4a0d      	ldr	r2, [pc, #52]	; (80005f4 <LoopForever+0xe>)
  movs r3, #0
 80005be:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005c0:	e002      	b.n	80005c8 <LoopCopyDataInit>

080005c2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005c2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005c4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005c6:	3304      	adds	r3, #4

080005c8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005c8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005ca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005cc:	d3f9      	bcc.n	80005c2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005ce:	4a0a      	ldr	r2, [pc, #40]	; (80005f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005d0:	4c0a      	ldr	r4, [pc, #40]	; (80005fc <LoopForever+0x16>)
  movs r3, #0
 80005d2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005d4:	e001      	b.n	80005da <LoopFillZerobss>

080005d6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005d6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005d8:	3204      	adds	r2, #4

080005da <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005da:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005dc:	d3fb      	bcc.n	80005d6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005de:	f000 f811 	bl	8000604 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005e2:	f7ff fefd 	bl	80003e0 <main>

080005e6 <LoopForever>:

LoopForever:
    b LoopForever
 80005e6:	e7fe      	b.n	80005e6 <LoopForever>
  ldr   r0, =_estack
 80005e8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005f0:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 80005f4:	08001748 	.word	0x08001748
  ldr r2, =_sbss
 80005f8:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 80005fc:	200000a0 	.word	0x200000a0

08000600 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000600:	e7fe      	b.n	8000600 <ADC_IRQHandler>
	...

08000604 <__libc_init_array>:
 8000604:	b570      	push	{r4, r5, r6, lr}
 8000606:	4d0d      	ldr	r5, [pc, #52]	; (800063c <__libc_init_array+0x38>)
 8000608:	4c0d      	ldr	r4, [pc, #52]	; (8000640 <__libc_init_array+0x3c>)
 800060a:	1b64      	subs	r4, r4, r5
 800060c:	10a4      	asrs	r4, r4, #2
 800060e:	2600      	movs	r6, #0
 8000610:	42a6      	cmp	r6, r4
 8000612:	d109      	bne.n	8000628 <__libc_init_array+0x24>
 8000614:	4d0b      	ldr	r5, [pc, #44]	; (8000644 <__libc_init_array+0x40>)
 8000616:	4c0c      	ldr	r4, [pc, #48]	; (8000648 <__libc_init_array+0x44>)
 8000618:	f001 f814 	bl	8001644 <_init>
 800061c:	1b64      	subs	r4, r4, r5
 800061e:	10a4      	asrs	r4, r4, #2
 8000620:	2600      	movs	r6, #0
 8000622:	42a6      	cmp	r6, r4
 8000624:	d105      	bne.n	8000632 <__libc_init_array+0x2e>
 8000626:	bd70      	pop	{r4, r5, r6, pc}
 8000628:	f855 3b04 	ldr.w	r3, [r5], #4
 800062c:	4798      	blx	r3
 800062e:	3601      	adds	r6, #1
 8000630:	e7ee      	b.n	8000610 <__libc_init_array+0xc>
 8000632:	f855 3b04 	ldr.w	r3, [r5], #4
 8000636:	4798      	blx	r3
 8000638:	3601      	adds	r6, #1
 800063a:	e7f2      	b.n	8000622 <__libc_init_array+0x1e>
 800063c:	08001740 	.word	0x08001740
 8000640:	08001740 	.word	0x08001740
 8000644:	08001740 	.word	0x08001740
 8000648:	08001744 	.word	0x08001744

0800064c <memset>:
 800064c:	4402      	add	r2, r0
 800064e:	4603      	mov	r3, r0
 8000650:	4293      	cmp	r3, r2
 8000652:	d100      	bne.n	8000656 <memset+0xa>
 8000654:	4770      	bx	lr
 8000656:	f803 1b01 	strb.w	r1, [r3], #1
 800065a:	e7f9      	b.n	8000650 <memset+0x4>

0800065c <__sfputc_r>:
 800065c:	6893      	ldr	r3, [r2, #8]
 800065e:	3b01      	subs	r3, #1
 8000660:	2b00      	cmp	r3, #0
 8000662:	b410      	push	{r4}
 8000664:	6093      	str	r3, [r2, #8]
 8000666:	da08      	bge.n	800067a <__sfputc_r+0x1e>
 8000668:	6994      	ldr	r4, [r2, #24]
 800066a:	42a3      	cmp	r3, r4
 800066c:	db01      	blt.n	8000672 <__sfputc_r+0x16>
 800066e:	290a      	cmp	r1, #10
 8000670:	d103      	bne.n	800067a <__sfputc_r+0x1e>
 8000672:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000676:	f000 bb17 	b.w	8000ca8 <__swbuf_r>
 800067a:	6813      	ldr	r3, [r2, #0]
 800067c:	1c58      	adds	r0, r3, #1
 800067e:	6010      	str	r0, [r2, #0]
 8000680:	7019      	strb	r1, [r3, #0]
 8000682:	4608      	mov	r0, r1
 8000684:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000688:	4770      	bx	lr

0800068a <__sfputs_r>:
 800068a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800068c:	4606      	mov	r6, r0
 800068e:	460f      	mov	r7, r1
 8000690:	4614      	mov	r4, r2
 8000692:	18d5      	adds	r5, r2, r3
 8000694:	42ac      	cmp	r4, r5
 8000696:	d101      	bne.n	800069c <__sfputs_r+0x12>
 8000698:	2000      	movs	r0, #0
 800069a:	e007      	b.n	80006ac <__sfputs_r+0x22>
 800069c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006a0:	463a      	mov	r2, r7
 80006a2:	4630      	mov	r0, r6
 80006a4:	f7ff ffda 	bl	800065c <__sfputc_r>
 80006a8:	1c43      	adds	r3, r0, #1
 80006aa:	d1f3      	bne.n	8000694 <__sfputs_r+0xa>
 80006ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080006b0 <_vfiprintf_r>:
 80006b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80006b4:	460d      	mov	r5, r1
 80006b6:	b09d      	sub	sp, #116	; 0x74
 80006b8:	4614      	mov	r4, r2
 80006ba:	4698      	mov	r8, r3
 80006bc:	4606      	mov	r6, r0
 80006be:	b118      	cbz	r0, 80006c8 <_vfiprintf_r+0x18>
 80006c0:	6983      	ldr	r3, [r0, #24]
 80006c2:	b90b      	cbnz	r3, 80006c8 <_vfiprintf_r+0x18>
 80006c4:	f000 fcca 	bl	800105c <__sinit>
 80006c8:	4b89      	ldr	r3, [pc, #548]	; (80008f0 <_vfiprintf_r+0x240>)
 80006ca:	429d      	cmp	r5, r3
 80006cc:	d11b      	bne.n	8000706 <_vfiprintf_r+0x56>
 80006ce:	6875      	ldr	r5, [r6, #4]
 80006d0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80006d2:	07d9      	lsls	r1, r3, #31
 80006d4:	d405      	bmi.n	80006e2 <_vfiprintf_r+0x32>
 80006d6:	89ab      	ldrh	r3, [r5, #12]
 80006d8:	059a      	lsls	r2, r3, #22
 80006da:	d402      	bmi.n	80006e2 <_vfiprintf_r+0x32>
 80006dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80006de:	f000 fd5b 	bl	8001198 <__retarget_lock_acquire_recursive>
 80006e2:	89ab      	ldrh	r3, [r5, #12]
 80006e4:	071b      	lsls	r3, r3, #28
 80006e6:	d501      	bpl.n	80006ec <_vfiprintf_r+0x3c>
 80006e8:	692b      	ldr	r3, [r5, #16]
 80006ea:	b9eb      	cbnz	r3, 8000728 <_vfiprintf_r+0x78>
 80006ec:	4629      	mov	r1, r5
 80006ee:	4630      	mov	r0, r6
 80006f0:	f000 fb2c 	bl	8000d4c <__swsetup_r>
 80006f4:	b1c0      	cbz	r0, 8000728 <_vfiprintf_r+0x78>
 80006f6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80006f8:	07dc      	lsls	r4, r3, #31
 80006fa:	d50e      	bpl.n	800071a <_vfiprintf_r+0x6a>
 80006fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000700:	b01d      	add	sp, #116	; 0x74
 8000702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000706:	4b7b      	ldr	r3, [pc, #492]	; (80008f4 <_vfiprintf_r+0x244>)
 8000708:	429d      	cmp	r5, r3
 800070a:	d101      	bne.n	8000710 <_vfiprintf_r+0x60>
 800070c:	68b5      	ldr	r5, [r6, #8]
 800070e:	e7df      	b.n	80006d0 <_vfiprintf_r+0x20>
 8000710:	4b79      	ldr	r3, [pc, #484]	; (80008f8 <_vfiprintf_r+0x248>)
 8000712:	429d      	cmp	r5, r3
 8000714:	bf08      	it	eq
 8000716:	68f5      	ldreq	r5, [r6, #12]
 8000718:	e7da      	b.n	80006d0 <_vfiprintf_r+0x20>
 800071a:	89ab      	ldrh	r3, [r5, #12]
 800071c:	0598      	lsls	r0, r3, #22
 800071e:	d4ed      	bmi.n	80006fc <_vfiprintf_r+0x4c>
 8000720:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000722:	f000 fd3a 	bl	800119a <__retarget_lock_release_recursive>
 8000726:	e7e9      	b.n	80006fc <_vfiprintf_r+0x4c>
 8000728:	2300      	movs	r3, #0
 800072a:	9309      	str	r3, [sp, #36]	; 0x24
 800072c:	2320      	movs	r3, #32
 800072e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000732:	f8cd 800c 	str.w	r8, [sp, #12]
 8000736:	2330      	movs	r3, #48	; 0x30
 8000738:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80008fc <_vfiprintf_r+0x24c>
 800073c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000740:	f04f 0901 	mov.w	r9, #1
 8000744:	4623      	mov	r3, r4
 8000746:	469a      	mov	sl, r3
 8000748:	f813 2b01 	ldrb.w	r2, [r3], #1
 800074c:	b10a      	cbz	r2, 8000752 <_vfiprintf_r+0xa2>
 800074e:	2a25      	cmp	r2, #37	; 0x25
 8000750:	d1f9      	bne.n	8000746 <_vfiprintf_r+0x96>
 8000752:	ebba 0b04 	subs.w	fp, sl, r4
 8000756:	d00b      	beq.n	8000770 <_vfiprintf_r+0xc0>
 8000758:	465b      	mov	r3, fp
 800075a:	4622      	mov	r2, r4
 800075c:	4629      	mov	r1, r5
 800075e:	4630      	mov	r0, r6
 8000760:	f7ff ff93 	bl	800068a <__sfputs_r>
 8000764:	3001      	adds	r0, #1
 8000766:	f000 80aa 	beq.w	80008be <_vfiprintf_r+0x20e>
 800076a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800076c:	445a      	add	r2, fp
 800076e:	9209      	str	r2, [sp, #36]	; 0x24
 8000770:	f89a 3000 	ldrb.w	r3, [sl]
 8000774:	2b00      	cmp	r3, #0
 8000776:	f000 80a2 	beq.w	80008be <_vfiprintf_r+0x20e>
 800077a:	2300      	movs	r3, #0
 800077c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000780:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000784:	f10a 0a01 	add.w	sl, sl, #1
 8000788:	9304      	str	r3, [sp, #16]
 800078a:	9307      	str	r3, [sp, #28]
 800078c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000790:	931a      	str	r3, [sp, #104]	; 0x68
 8000792:	4654      	mov	r4, sl
 8000794:	2205      	movs	r2, #5
 8000796:	f814 1b01 	ldrb.w	r1, [r4], #1
 800079a:	4858      	ldr	r0, [pc, #352]	; (80008fc <_vfiprintf_r+0x24c>)
 800079c:	f7ff fd28 	bl	80001f0 <memchr>
 80007a0:	9a04      	ldr	r2, [sp, #16]
 80007a2:	b9d8      	cbnz	r0, 80007dc <_vfiprintf_r+0x12c>
 80007a4:	06d1      	lsls	r1, r2, #27
 80007a6:	bf44      	itt	mi
 80007a8:	2320      	movmi	r3, #32
 80007aa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80007ae:	0713      	lsls	r3, r2, #28
 80007b0:	bf44      	itt	mi
 80007b2:	232b      	movmi	r3, #43	; 0x2b
 80007b4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80007b8:	f89a 3000 	ldrb.w	r3, [sl]
 80007bc:	2b2a      	cmp	r3, #42	; 0x2a
 80007be:	d015      	beq.n	80007ec <_vfiprintf_r+0x13c>
 80007c0:	9a07      	ldr	r2, [sp, #28]
 80007c2:	4654      	mov	r4, sl
 80007c4:	2000      	movs	r0, #0
 80007c6:	f04f 0c0a 	mov.w	ip, #10
 80007ca:	4621      	mov	r1, r4
 80007cc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80007d0:	3b30      	subs	r3, #48	; 0x30
 80007d2:	2b09      	cmp	r3, #9
 80007d4:	d94e      	bls.n	8000874 <_vfiprintf_r+0x1c4>
 80007d6:	b1b0      	cbz	r0, 8000806 <_vfiprintf_r+0x156>
 80007d8:	9207      	str	r2, [sp, #28]
 80007da:	e014      	b.n	8000806 <_vfiprintf_r+0x156>
 80007dc:	eba0 0308 	sub.w	r3, r0, r8
 80007e0:	fa09 f303 	lsl.w	r3, r9, r3
 80007e4:	4313      	orrs	r3, r2
 80007e6:	9304      	str	r3, [sp, #16]
 80007e8:	46a2      	mov	sl, r4
 80007ea:	e7d2      	b.n	8000792 <_vfiprintf_r+0xe2>
 80007ec:	9b03      	ldr	r3, [sp, #12]
 80007ee:	1d19      	adds	r1, r3, #4
 80007f0:	681b      	ldr	r3, [r3, #0]
 80007f2:	9103      	str	r1, [sp, #12]
 80007f4:	2b00      	cmp	r3, #0
 80007f6:	bfbb      	ittet	lt
 80007f8:	425b      	neglt	r3, r3
 80007fa:	f042 0202 	orrlt.w	r2, r2, #2
 80007fe:	9307      	strge	r3, [sp, #28]
 8000800:	9307      	strlt	r3, [sp, #28]
 8000802:	bfb8      	it	lt
 8000804:	9204      	strlt	r2, [sp, #16]
 8000806:	7823      	ldrb	r3, [r4, #0]
 8000808:	2b2e      	cmp	r3, #46	; 0x2e
 800080a:	d10c      	bne.n	8000826 <_vfiprintf_r+0x176>
 800080c:	7863      	ldrb	r3, [r4, #1]
 800080e:	2b2a      	cmp	r3, #42	; 0x2a
 8000810:	d135      	bne.n	800087e <_vfiprintf_r+0x1ce>
 8000812:	9b03      	ldr	r3, [sp, #12]
 8000814:	1d1a      	adds	r2, r3, #4
 8000816:	681b      	ldr	r3, [r3, #0]
 8000818:	9203      	str	r2, [sp, #12]
 800081a:	2b00      	cmp	r3, #0
 800081c:	bfb8      	it	lt
 800081e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000822:	3402      	adds	r4, #2
 8000824:	9305      	str	r3, [sp, #20]
 8000826:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800090c <_vfiprintf_r+0x25c>
 800082a:	7821      	ldrb	r1, [r4, #0]
 800082c:	2203      	movs	r2, #3
 800082e:	4650      	mov	r0, sl
 8000830:	f7ff fcde 	bl	80001f0 <memchr>
 8000834:	b140      	cbz	r0, 8000848 <_vfiprintf_r+0x198>
 8000836:	2340      	movs	r3, #64	; 0x40
 8000838:	eba0 000a 	sub.w	r0, r0, sl
 800083c:	fa03 f000 	lsl.w	r0, r3, r0
 8000840:	9b04      	ldr	r3, [sp, #16]
 8000842:	4303      	orrs	r3, r0
 8000844:	3401      	adds	r4, #1
 8000846:	9304      	str	r3, [sp, #16]
 8000848:	f814 1b01 	ldrb.w	r1, [r4], #1
 800084c:	482c      	ldr	r0, [pc, #176]	; (8000900 <_vfiprintf_r+0x250>)
 800084e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000852:	2206      	movs	r2, #6
 8000854:	f7ff fccc 	bl	80001f0 <memchr>
 8000858:	2800      	cmp	r0, #0
 800085a:	d03f      	beq.n	80008dc <_vfiprintf_r+0x22c>
 800085c:	4b29      	ldr	r3, [pc, #164]	; (8000904 <_vfiprintf_r+0x254>)
 800085e:	bb1b      	cbnz	r3, 80008a8 <_vfiprintf_r+0x1f8>
 8000860:	9b03      	ldr	r3, [sp, #12]
 8000862:	3307      	adds	r3, #7
 8000864:	f023 0307 	bic.w	r3, r3, #7
 8000868:	3308      	adds	r3, #8
 800086a:	9303      	str	r3, [sp, #12]
 800086c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800086e:	443b      	add	r3, r7
 8000870:	9309      	str	r3, [sp, #36]	; 0x24
 8000872:	e767      	b.n	8000744 <_vfiprintf_r+0x94>
 8000874:	fb0c 3202 	mla	r2, ip, r2, r3
 8000878:	460c      	mov	r4, r1
 800087a:	2001      	movs	r0, #1
 800087c:	e7a5      	b.n	80007ca <_vfiprintf_r+0x11a>
 800087e:	2300      	movs	r3, #0
 8000880:	3401      	adds	r4, #1
 8000882:	9305      	str	r3, [sp, #20]
 8000884:	4619      	mov	r1, r3
 8000886:	f04f 0c0a 	mov.w	ip, #10
 800088a:	4620      	mov	r0, r4
 800088c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000890:	3a30      	subs	r2, #48	; 0x30
 8000892:	2a09      	cmp	r2, #9
 8000894:	d903      	bls.n	800089e <_vfiprintf_r+0x1ee>
 8000896:	2b00      	cmp	r3, #0
 8000898:	d0c5      	beq.n	8000826 <_vfiprintf_r+0x176>
 800089a:	9105      	str	r1, [sp, #20]
 800089c:	e7c3      	b.n	8000826 <_vfiprintf_r+0x176>
 800089e:	fb0c 2101 	mla	r1, ip, r1, r2
 80008a2:	4604      	mov	r4, r0
 80008a4:	2301      	movs	r3, #1
 80008a6:	e7f0      	b.n	800088a <_vfiprintf_r+0x1da>
 80008a8:	ab03      	add	r3, sp, #12
 80008aa:	9300      	str	r3, [sp, #0]
 80008ac:	462a      	mov	r2, r5
 80008ae:	4b16      	ldr	r3, [pc, #88]	; (8000908 <_vfiprintf_r+0x258>)
 80008b0:	a904      	add	r1, sp, #16
 80008b2:	4630      	mov	r0, r6
 80008b4:	f3af 8000 	nop.w
 80008b8:	4607      	mov	r7, r0
 80008ba:	1c78      	adds	r0, r7, #1
 80008bc:	d1d6      	bne.n	800086c <_vfiprintf_r+0x1bc>
 80008be:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008c0:	07d9      	lsls	r1, r3, #31
 80008c2:	d405      	bmi.n	80008d0 <_vfiprintf_r+0x220>
 80008c4:	89ab      	ldrh	r3, [r5, #12]
 80008c6:	059a      	lsls	r2, r3, #22
 80008c8:	d402      	bmi.n	80008d0 <_vfiprintf_r+0x220>
 80008ca:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008cc:	f000 fc65 	bl	800119a <__retarget_lock_release_recursive>
 80008d0:	89ab      	ldrh	r3, [r5, #12]
 80008d2:	065b      	lsls	r3, r3, #25
 80008d4:	f53f af12 	bmi.w	80006fc <_vfiprintf_r+0x4c>
 80008d8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80008da:	e711      	b.n	8000700 <_vfiprintf_r+0x50>
 80008dc:	ab03      	add	r3, sp, #12
 80008de:	9300      	str	r3, [sp, #0]
 80008e0:	462a      	mov	r2, r5
 80008e2:	4b09      	ldr	r3, [pc, #36]	; (8000908 <_vfiprintf_r+0x258>)
 80008e4:	a904      	add	r1, sp, #16
 80008e6:	4630      	mov	r0, r6
 80008e8:	f000 f88a 	bl	8000a00 <_printf_i>
 80008ec:	e7e4      	b.n	80008b8 <_vfiprintf_r+0x208>
 80008ee:	bf00      	nop
 80008f0:	08001700 	.word	0x08001700
 80008f4:	08001720 	.word	0x08001720
 80008f8:	080016e0 	.word	0x080016e0
 80008fc:	080016ac 	.word	0x080016ac
 8000900:	080016b6 	.word	0x080016b6
 8000904:	00000000 	.word	0x00000000
 8000908:	0800068b 	.word	0x0800068b
 800090c:	080016b2 	.word	0x080016b2

08000910 <vfiprintf>:
 8000910:	4613      	mov	r3, r2
 8000912:	460a      	mov	r2, r1
 8000914:	4601      	mov	r1, r0
 8000916:	4802      	ldr	r0, [pc, #8]	; (8000920 <vfiprintf+0x10>)
 8000918:	6800      	ldr	r0, [r0, #0]
 800091a:	f7ff bec9 	b.w	80006b0 <_vfiprintf_r>
 800091e:	bf00      	nop
 8000920:	20000004 	.word	0x20000004

08000924 <_printf_common>:
 8000924:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000928:	4616      	mov	r6, r2
 800092a:	4699      	mov	r9, r3
 800092c:	688a      	ldr	r2, [r1, #8]
 800092e:	690b      	ldr	r3, [r1, #16]
 8000930:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000934:	4293      	cmp	r3, r2
 8000936:	bfb8      	it	lt
 8000938:	4613      	movlt	r3, r2
 800093a:	6033      	str	r3, [r6, #0]
 800093c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000940:	4607      	mov	r7, r0
 8000942:	460c      	mov	r4, r1
 8000944:	b10a      	cbz	r2, 800094a <_printf_common+0x26>
 8000946:	3301      	adds	r3, #1
 8000948:	6033      	str	r3, [r6, #0]
 800094a:	6823      	ldr	r3, [r4, #0]
 800094c:	0699      	lsls	r1, r3, #26
 800094e:	bf42      	ittt	mi
 8000950:	6833      	ldrmi	r3, [r6, #0]
 8000952:	3302      	addmi	r3, #2
 8000954:	6033      	strmi	r3, [r6, #0]
 8000956:	6825      	ldr	r5, [r4, #0]
 8000958:	f015 0506 	ands.w	r5, r5, #6
 800095c:	d106      	bne.n	800096c <_printf_common+0x48>
 800095e:	f104 0a19 	add.w	sl, r4, #25
 8000962:	68e3      	ldr	r3, [r4, #12]
 8000964:	6832      	ldr	r2, [r6, #0]
 8000966:	1a9b      	subs	r3, r3, r2
 8000968:	42ab      	cmp	r3, r5
 800096a:	dc26      	bgt.n	80009ba <_printf_common+0x96>
 800096c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000970:	1e13      	subs	r3, r2, #0
 8000972:	6822      	ldr	r2, [r4, #0]
 8000974:	bf18      	it	ne
 8000976:	2301      	movne	r3, #1
 8000978:	0692      	lsls	r2, r2, #26
 800097a:	d42b      	bmi.n	80009d4 <_printf_common+0xb0>
 800097c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000980:	4649      	mov	r1, r9
 8000982:	4638      	mov	r0, r7
 8000984:	47c0      	blx	r8
 8000986:	3001      	adds	r0, #1
 8000988:	d01e      	beq.n	80009c8 <_printf_common+0xa4>
 800098a:	6823      	ldr	r3, [r4, #0]
 800098c:	68e5      	ldr	r5, [r4, #12]
 800098e:	6832      	ldr	r2, [r6, #0]
 8000990:	f003 0306 	and.w	r3, r3, #6
 8000994:	2b04      	cmp	r3, #4
 8000996:	bf08      	it	eq
 8000998:	1aad      	subeq	r5, r5, r2
 800099a:	68a3      	ldr	r3, [r4, #8]
 800099c:	6922      	ldr	r2, [r4, #16]
 800099e:	bf0c      	ite	eq
 80009a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80009a4:	2500      	movne	r5, #0
 80009a6:	4293      	cmp	r3, r2
 80009a8:	bfc4      	itt	gt
 80009aa:	1a9b      	subgt	r3, r3, r2
 80009ac:	18ed      	addgt	r5, r5, r3
 80009ae:	2600      	movs	r6, #0
 80009b0:	341a      	adds	r4, #26
 80009b2:	42b5      	cmp	r5, r6
 80009b4:	d11a      	bne.n	80009ec <_printf_common+0xc8>
 80009b6:	2000      	movs	r0, #0
 80009b8:	e008      	b.n	80009cc <_printf_common+0xa8>
 80009ba:	2301      	movs	r3, #1
 80009bc:	4652      	mov	r2, sl
 80009be:	4649      	mov	r1, r9
 80009c0:	4638      	mov	r0, r7
 80009c2:	47c0      	blx	r8
 80009c4:	3001      	adds	r0, #1
 80009c6:	d103      	bne.n	80009d0 <_printf_common+0xac>
 80009c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80009cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009d0:	3501      	adds	r5, #1
 80009d2:	e7c6      	b.n	8000962 <_printf_common+0x3e>
 80009d4:	18e1      	adds	r1, r4, r3
 80009d6:	1c5a      	adds	r2, r3, #1
 80009d8:	2030      	movs	r0, #48	; 0x30
 80009da:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80009de:	4422      	add	r2, r4
 80009e0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80009e4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80009e8:	3302      	adds	r3, #2
 80009ea:	e7c7      	b.n	800097c <_printf_common+0x58>
 80009ec:	2301      	movs	r3, #1
 80009ee:	4622      	mov	r2, r4
 80009f0:	4649      	mov	r1, r9
 80009f2:	4638      	mov	r0, r7
 80009f4:	47c0      	blx	r8
 80009f6:	3001      	adds	r0, #1
 80009f8:	d0e6      	beq.n	80009c8 <_printf_common+0xa4>
 80009fa:	3601      	adds	r6, #1
 80009fc:	e7d9      	b.n	80009b2 <_printf_common+0x8e>
	...

08000a00 <_printf_i>:
 8000a00:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000a04:	460c      	mov	r4, r1
 8000a06:	4691      	mov	r9, r2
 8000a08:	7e27      	ldrb	r7, [r4, #24]
 8000a0a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000a0c:	2f78      	cmp	r7, #120	; 0x78
 8000a0e:	4680      	mov	r8, r0
 8000a10:	469a      	mov	sl, r3
 8000a12:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000a16:	d807      	bhi.n	8000a28 <_printf_i+0x28>
 8000a18:	2f62      	cmp	r7, #98	; 0x62
 8000a1a:	d80a      	bhi.n	8000a32 <_printf_i+0x32>
 8000a1c:	2f00      	cmp	r7, #0
 8000a1e:	f000 80d8 	beq.w	8000bd2 <_printf_i+0x1d2>
 8000a22:	2f58      	cmp	r7, #88	; 0x58
 8000a24:	f000 80a3 	beq.w	8000b6e <_printf_i+0x16e>
 8000a28:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000a2c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000a30:	e03a      	b.n	8000aa8 <_printf_i+0xa8>
 8000a32:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000a36:	2b15      	cmp	r3, #21
 8000a38:	d8f6      	bhi.n	8000a28 <_printf_i+0x28>
 8000a3a:	a001      	add	r0, pc, #4	; (adr r0, 8000a40 <_printf_i+0x40>)
 8000a3c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000a40:	08000a99 	.word	0x08000a99
 8000a44:	08000aad 	.word	0x08000aad
 8000a48:	08000a29 	.word	0x08000a29
 8000a4c:	08000a29 	.word	0x08000a29
 8000a50:	08000a29 	.word	0x08000a29
 8000a54:	08000a29 	.word	0x08000a29
 8000a58:	08000aad 	.word	0x08000aad
 8000a5c:	08000a29 	.word	0x08000a29
 8000a60:	08000a29 	.word	0x08000a29
 8000a64:	08000a29 	.word	0x08000a29
 8000a68:	08000a29 	.word	0x08000a29
 8000a6c:	08000bb9 	.word	0x08000bb9
 8000a70:	08000add 	.word	0x08000add
 8000a74:	08000b9b 	.word	0x08000b9b
 8000a78:	08000a29 	.word	0x08000a29
 8000a7c:	08000a29 	.word	0x08000a29
 8000a80:	08000bdb 	.word	0x08000bdb
 8000a84:	08000a29 	.word	0x08000a29
 8000a88:	08000add 	.word	0x08000add
 8000a8c:	08000a29 	.word	0x08000a29
 8000a90:	08000a29 	.word	0x08000a29
 8000a94:	08000ba3 	.word	0x08000ba3
 8000a98:	680b      	ldr	r3, [r1, #0]
 8000a9a:	1d1a      	adds	r2, r3, #4
 8000a9c:	681b      	ldr	r3, [r3, #0]
 8000a9e:	600a      	str	r2, [r1, #0]
 8000aa0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000aa4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000aa8:	2301      	movs	r3, #1
 8000aaa:	e0a3      	b.n	8000bf4 <_printf_i+0x1f4>
 8000aac:	6825      	ldr	r5, [r4, #0]
 8000aae:	6808      	ldr	r0, [r1, #0]
 8000ab0:	062e      	lsls	r6, r5, #24
 8000ab2:	f100 0304 	add.w	r3, r0, #4
 8000ab6:	d50a      	bpl.n	8000ace <_printf_i+0xce>
 8000ab8:	6805      	ldr	r5, [r0, #0]
 8000aba:	600b      	str	r3, [r1, #0]
 8000abc:	2d00      	cmp	r5, #0
 8000abe:	da03      	bge.n	8000ac8 <_printf_i+0xc8>
 8000ac0:	232d      	movs	r3, #45	; 0x2d
 8000ac2:	426d      	negs	r5, r5
 8000ac4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ac8:	485e      	ldr	r0, [pc, #376]	; (8000c44 <_printf_i+0x244>)
 8000aca:	230a      	movs	r3, #10
 8000acc:	e019      	b.n	8000b02 <_printf_i+0x102>
 8000ace:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000ad2:	6805      	ldr	r5, [r0, #0]
 8000ad4:	600b      	str	r3, [r1, #0]
 8000ad6:	bf18      	it	ne
 8000ad8:	b22d      	sxthne	r5, r5
 8000ada:	e7ef      	b.n	8000abc <_printf_i+0xbc>
 8000adc:	680b      	ldr	r3, [r1, #0]
 8000ade:	6825      	ldr	r5, [r4, #0]
 8000ae0:	1d18      	adds	r0, r3, #4
 8000ae2:	6008      	str	r0, [r1, #0]
 8000ae4:	0628      	lsls	r0, r5, #24
 8000ae6:	d501      	bpl.n	8000aec <_printf_i+0xec>
 8000ae8:	681d      	ldr	r5, [r3, #0]
 8000aea:	e002      	b.n	8000af2 <_printf_i+0xf2>
 8000aec:	0669      	lsls	r1, r5, #25
 8000aee:	d5fb      	bpl.n	8000ae8 <_printf_i+0xe8>
 8000af0:	881d      	ldrh	r5, [r3, #0]
 8000af2:	4854      	ldr	r0, [pc, #336]	; (8000c44 <_printf_i+0x244>)
 8000af4:	2f6f      	cmp	r7, #111	; 0x6f
 8000af6:	bf0c      	ite	eq
 8000af8:	2308      	moveq	r3, #8
 8000afa:	230a      	movne	r3, #10
 8000afc:	2100      	movs	r1, #0
 8000afe:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000b02:	6866      	ldr	r6, [r4, #4]
 8000b04:	60a6      	str	r6, [r4, #8]
 8000b06:	2e00      	cmp	r6, #0
 8000b08:	bfa2      	ittt	ge
 8000b0a:	6821      	ldrge	r1, [r4, #0]
 8000b0c:	f021 0104 	bicge.w	r1, r1, #4
 8000b10:	6021      	strge	r1, [r4, #0]
 8000b12:	b90d      	cbnz	r5, 8000b18 <_printf_i+0x118>
 8000b14:	2e00      	cmp	r6, #0
 8000b16:	d04d      	beq.n	8000bb4 <_printf_i+0x1b4>
 8000b18:	4616      	mov	r6, r2
 8000b1a:	fbb5 f1f3 	udiv	r1, r5, r3
 8000b1e:	fb03 5711 	mls	r7, r3, r1, r5
 8000b22:	5dc7      	ldrb	r7, [r0, r7]
 8000b24:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000b28:	462f      	mov	r7, r5
 8000b2a:	42bb      	cmp	r3, r7
 8000b2c:	460d      	mov	r5, r1
 8000b2e:	d9f4      	bls.n	8000b1a <_printf_i+0x11a>
 8000b30:	2b08      	cmp	r3, #8
 8000b32:	d10b      	bne.n	8000b4c <_printf_i+0x14c>
 8000b34:	6823      	ldr	r3, [r4, #0]
 8000b36:	07df      	lsls	r7, r3, #31
 8000b38:	d508      	bpl.n	8000b4c <_printf_i+0x14c>
 8000b3a:	6923      	ldr	r3, [r4, #16]
 8000b3c:	6861      	ldr	r1, [r4, #4]
 8000b3e:	4299      	cmp	r1, r3
 8000b40:	bfde      	ittt	le
 8000b42:	2330      	movle	r3, #48	; 0x30
 8000b44:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000b48:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8000b4c:	1b92      	subs	r2, r2, r6
 8000b4e:	6122      	str	r2, [r4, #16]
 8000b50:	f8cd a000 	str.w	sl, [sp]
 8000b54:	464b      	mov	r3, r9
 8000b56:	aa03      	add	r2, sp, #12
 8000b58:	4621      	mov	r1, r4
 8000b5a:	4640      	mov	r0, r8
 8000b5c:	f7ff fee2 	bl	8000924 <_printf_common>
 8000b60:	3001      	adds	r0, #1
 8000b62:	d14c      	bne.n	8000bfe <_printf_i+0x1fe>
 8000b64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b68:	b004      	add	sp, #16
 8000b6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b6e:	4835      	ldr	r0, [pc, #212]	; (8000c44 <_printf_i+0x244>)
 8000b70:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000b74:	6823      	ldr	r3, [r4, #0]
 8000b76:	680e      	ldr	r6, [r1, #0]
 8000b78:	061f      	lsls	r7, r3, #24
 8000b7a:	f856 5b04 	ldr.w	r5, [r6], #4
 8000b7e:	600e      	str	r6, [r1, #0]
 8000b80:	d514      	bpl.n	8000bac <_printf_i+0x1ac>
 8000b82:	07d9      	lsls	r1, r3, #31
 8000b84:	bf44      	itt	mi
 8000b86:	f043 0320 	orrmi.w	r3, r3, #32
 8000b8a:	6023      	strmi	r3, [r4, #0]
 8000b8c:	b91d      	cbnz	r5, 8000b96 <_printf_i+0x196>
 8000b8e:	6823      	ldr	r3, [r4, #0]
 8000b90:	f023 0320 	bic.w	r3, r3, #32
 8000b94:	6023      	str	r3, [r4, #0]
 8000b96:	2310      	movs	r3, #16
 8000b98:	e7b0      	b.n	8000afc <_printf_i+0xfc>
 8000b9a:	6823      	ldr	r3, [r4, #0]
 8000b9c:	f043 0320 	orr.w	r3, r3, #32
 8000ba0:	6023      	str	r3, [r4, #0]
 8000ba2:	2378      	movs	r3, #120	; 0x78
 8000ba4:	4828      	ldr	r0, [pc, #160]	; (8000c48 <_printf_i+0x248>)
 8000ba6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000baa:	e7e3      	b.n	8000b74 <_printf_i+0x174>
 8000bac:	065e      	lsls	r6, r3, #25
 8000bae:	bf48      	it	mi
 8000bb0:	b2ad      	uxthmi	r5, r5
 8000bb2:	e7e6      	b.n	8000b82 <_printf_i+0x182>
 8000bb4:	4616      	mov	r6, r2
 8000bb6:	e7bb      	b.n	8000b30 <_printf_i+0x130>
 8000bb8:	680b      	ldr	r3, [r1, #0]
 8000bba:	6826      	ldr	r6, [r4, #0]
 8000bbc:	6960      	ldr	r0, [r4, #20]
 8000bbe:	1d1d      	adds	r5, r3, #4
 8000bc0:	600d      	str	r5, [r1, #0]
 8000bc2:	0635      	lsls	r5, r6, #24
 8000bc4:	681b      	ldr	r3, [r3, #0]
 8000bc6:	d501      	bpl.n	8000bcc <_printf_i+0x1cc>
 8000bc8:	6018      	str	r0, [r3, #0]
 8000bca:	e002      	b.n	8000bd2 <_printf_i+0x1d2>
 8000bcc:	0671      	lsls	r1, r6, #25
 8000bce:	d5fb      	bpl.n	8000bc8 <_printf_i+0x1c8>
 8000bd0:	8018      	strh	r0, [r3, #0]
 8000bd2:	2300      	movs	r3, #0
 8000bd4:	6123      	str	r3, [r4, #16]
 8000bd6:	4616      	mov	r6, r2
 8000bd8:	e7ba      	b.n	8000b50 <_printf_i+0x150>
 8000bda:	680b      	ldr	r3, [r1, #0]
 8000bdc:	1d1a      	adds	r2, r3, #4
 8000bde:	600a      	str	r2, [r1, #0]
 8000be0:	681e      	ldr	r6, [r3, #0]
 8000be2:	6862      	ldr	r2, [r4, #4]
 8000be4:	2100      	movs	r1, #0
 8000be6:	4630      	mov	r0, r6
 8000be8:	f7ff fb02 	bl	80001f0 <memchr>
 8000bec:	b108      	cbz	r0, 8000bf2 <_printf_i+0x1f2>
 8000bee:	1b80      	subs	r0, r0, r6
 8000bf0:	6060      	str	r0, [r4, #4]
 8000bf2:	6863      	ldr	r3, [r4, #4]
 8000bf4:	6123      	str	r3, [r4, #16]
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000bfc:	e7a8      	b.n	8000b50 <_printf_i+0x150>
 8000bfe:	6923      	ldr	r3, [r4, #16]
 8000c00:	4632      	mov	r2, r6
 8000c02:	4649      	mov	r1, r9
 8000c04:	4640      	mov	r0, r8
 8000c06:	47d0      	blx	sl
 8000c08:	3001      	adds	r0, #1
 8000c0a:	d0ab      	beq.n	8000b64 <_printf_i+0x164>
 8000c0c:	6823      	ldr	r3, [r4, #0]
 8000c0e:	079b      	lsls	r3, r3, #30
 8000c10:	d413      	bmi.n	8000c3a <_printf_i+0x23a>
 8000c12:	68e0      	ldr	r0, [r4, #12]
 8000c14:	9b03      	ldr	r3, [sp, #12]
 8000c16:	4298      	cmp	r0, r3
 8000c18:	bfb8      	it	lt
 8000c1a:	4618      	movlt	r0, r3
 8000c1c:	e7a4      	b.n	8000b68 <_printf_i+0x168>
 8000c1e:	2301      	movs	r3, #1
 8000c20:	4632      	mov	r2, r6
 8000c22:	4649      	mov	r1, r9
 8000c24:	4640      	mov	r0, r8
 8000c26:	47d0      	blx	sl
 8000c28:	3001      	adds	r0, #1
 8000c2a:	d09b      	beq.n	8000b64 <_printf_i+0x164>
 8000c2c:	3501      	adds	r5, #1
 8000c2e:	68e3      	ldr	r3, [r4, #12]
 8000c30:	9903      	ldr	r1, [sp, #12]
 8000c32:	1a5b      	subs	r3, r3, r1
 8000c34:	42ab      	cmp	r3, r5
 8000c36:	dcf2      	bgt.n	8000c1e <_printf_i+0x21e>
 8000c38:	e7eb      	b.n	8000c12 <_printf_i+0x212>
 8000c3a:	2500      	movs	r5, #0
 8000c3c:	f104 0619 	add.w	r6, r4, #25
 8000c40:	e7f5      	b.n	8000c2e <_printf_i+0x22e>
 8000c42:	bf00      	nop
 8000c44:	080016bd 	.word	0x080016bd
 8000c48:	080016ce 	.word	0x080016ce

08000c4c <iprintf>:
 8000c4c:	b40f      	push	{r0, r1, r2, r3}
 8000c4e:	4b0a      	ldr	r3, [pc, #40]	; (8000c78 <iprintf+0x2c>)
 8000c50:	b513      	push	{r0, r1, r4, lr}
 8000c52:	681c      	ldr	r4, [r3, #0]
 8000c54:	b124      	cbz	r4, 8000c60 <iprintf+0x14>
 8000c56:	69a3      	ldr	r3, [r4, #24]
 8000c58:	b913      	cbnz	r3, 8000c60 <iprintf+0x14>
 8000c5a:	4620      	mov	r0, r4
 8000c5c:	f000 f9fe 	bl	800105c <__sinit>
 8000c60:	ab05      	add	r3, sp, #20
 8000c62:	9a04      	ldr	r2, [sp, #16]
 8000c64:	68a1      	ldr	r1, [r4, #8]
 8000c66:	9301      	str	r3, [sp, #4]
 8000c68:	4620      	mov	r0, r4
 8000c6a:	f7ff fd21 	bl	80006b0 <_vfiprintf_r>
 8000c6e:	b002      	add	sp, #8
 8000c70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c74:	b004      	add	sp, #16
 8000c76:	4770      	bx	lr
 8000c78:	20000004 	.word	0x20000004

08000c7c <putchar>:
 8000c7c:	4b09      	ldr	r3, [pc, #36]	; (8000ca4 <putchar+0x28>)
 8000c7e:	b513      	push	{r0, r1, r4, lr}
 8000c80:	681c      	ldr	r4, [r3, #0]
 8000c82:	4601      	mov	r1, r0
 8000c84:	b134      	cbz	r4, 8000c94 <putchar+0x18>
 8000c86:	69a3      	ldr	r3, [r4, #24]
 8000c88:	b923      	cbnz	r3, 8000c94 <putchar+0x18>
 8000c8a:	9001      	str	r0, [sp, #4]
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f000 f9e5 	bl	800105c <__sinit>
 8000c92:	9901      	ldr	r1, [sp, #4]
 8000c94:	68a2      	ldr	r2, [r4, #8]
 8000c96:	4620      	mov	r0, r4
 8000c98:	b002      	add	sp, #8
 8000c9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c9e:	f000 bb8b 	b.w	80013b8 <_putc_r>
 8000ca2:	bf00      	nop
 8000ca4:	20000004 	.word	0x20000004

08000ca8 <__swbuf_r>:
 8000ca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000caa:	460e      	mov	r6, r1
 8000cac:	4614      	mov	r4, r2
 8000cae:	4605      	mov	r5, r0
 8000cb0:	b118      	cbz	r0, 8000cba <__swbuf_r+0x12>
 8000cb2:	6983      	ldr	r3, [r0, #24]
 8000cb4:	b90b      	cbnz	r3, 8000cba <__swbuf_r+0x12>
 8000cb6:	f000 f9d1 	bl	800105c <__sinit>
 8000cba:	4b21      	ldr	r3, [pc, #132]	; (8000d40 <__swbuf_r+0x98>)
 8000cbc:	429c      	cmp	r4, r3
 8000cbe:	d12b      	bne.n	8000d18 <__swbuf_r+0x70>
 8000cc0:	686c      	ldr	r4, [r5, #4]
 8000cc2:	69a3      	ldr	r3, [r4, #24]
 8000cc4:	60a3      	str	r3, [r4, #8]
 8000cc6:	89a3      	ldrh	r3, [r4, #12]
 8000cc8:	071a      	lsls	r2, r3, #28
 8000cca:	d52f      	bpl.n	8000d2c <__swbuf_r+0x84>
 8000ccc:	6923      	ldr	r3, [r4, #16]
 8000cce:	b36b      	cbz	r3, 8000d2c <__swbuf_r+0x84>
 8000cd0:	6923      	ldr	r3, [r4, #16]
 8000cd2:	6820      	ldr	r0, [r4, #0]
 8000cd4:	1ac0      	subs	r0, r0, r3
 8000cd6:	6963      	ldr	r3, [r4, #20]
 8000cd8:	b2f6      	uxtb	r6, r6
 8000cda:	4283      	cmp	r3, r0
 8000cdc:	4637      	mov	r7, r6
 8000cde:	dc04      	bgt.n	8000cea <__swbuf_r+0x42>
 8000ce0:	4621      	mov	r1, r4
 8000ce2:	4628      	mov	r0, r5
 8000ce4:	f000 f926 	bl	8000f34 <_fflush_r>
 8000ce8:	bb30      	cbnz	r0, 8000d38 <__swbuf_r+0x90>
 8000cea:	68a3      	ldr	r3, [r4, #8]
 8000cec:	3b01      	subs	r3, #1
 8000cee:	60a3      	str	r3, [r4, #8]
 8000cf0:	6823      	ldr	r3, [r4, #0]
 8000cf2:	1c5a      	adds	r2, r3, #1
 8000cf4:	6022      	str	r2, [r4, #0]
 8000cf6:	701e      	strb	r6, [r3, #0]
 8000cf8:	6963      	ldr	r3, [r4, #20]
 8000cfa:	3001      	adds	r0, #1
 8000cfc:	4283      	cmp	r3, r0
 8000cfe:	d004      	beq.n	8000d0a <__swbuf_r+0x62>
 8000d00:	89a3      	ldrh	r3, [r4, #12]
 8000d02:	07db      	lsls	r3, r3, #31
 8000d04:	d506      	bpl.n	8000d14 <__swbuf_r+0x6c>
 8000d06:	2e0a      	cmp	r6, #10
 8000d08:	d104      	bne.n	8000d14 <__swbuf_r+0x6c>
 8000d0a:	4621      	mov	r1, r4
 8000d0c:	4628      	mov	r0, r5
 8000d0e:	f000 f911 	bl	8000f34 <_fflush_r>
 8000d12:	b988      	cbnz	r0, 8000d38 <__swbuf_r+0x90>
 8000d14:	4638      	mov	r0, r7
 8000d16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d18:	4b0a      	ldr	r3, [pc, #40]	; (8000d44 <__swbuf_r+0x9c>)
 8000d1a:	429c      	cmp	r4, r3
 8000d1c:	d101      	bne.n	8000d22 <__swbuf_r+0x7a>
 8000d1e:	68ac      	ldr	r4, [r5, #8]
 8000d20:	e7cf      	b.n	8000cc2 <__swbuf_r+0x1a>
 8000d22:	4b09      	ldr	r3, [pc, #36]	; (8000d48 <__swbuf_r+0xa0>)
 8000d24:	429c      	cmp	r4, r3
 8000d26:	bf08      	it	eq
 8000d28:	68ec      	ldreq	r4, [r5, #12]
 8000d2a:	e7ca      	b.n	8000cc2 <__swbuf_r+0x1a>
 8000d2c:	4621      	mov	r1, r4
 8000d2e:	4628      	mov	r0, r5
 8000d30:	f000 f80c 	bl	8000d4c <__swsetup_r>
 8000d34:	2800      	cmp	r0, #0
 8000d36:	d0cb      	beq.n	8000cd0 <__swbuf_r+0x28>
 8000d38:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000d3c:	e7ea      	b.n	8000d14 <__swbuf_r+0x6c>
 8000d3e:	bf00      	nop
 8000d40:	08001700 	.word	0x08001700
 8000d44:	08001720 	.word	0x08001720
 8000d48:	080016e0 	.word	0x080016e0

08000d4c <__swsetup_r>:
 8000d4c:	4b32      	ldr	r3, [pc, #200]	; (8000e18 <__swsetup_r+0xcc>)
 8000d4e:	b570      	push	{r4, r5, r6, lr}
 8000d50:	681d      	ldr	r5, [r3, #0]
 8000d52:	4606      	mov	r6, r0
 8000d54:	460c      	mov	r4, r1
 8000d56:	b125      	cbz	r5, 8000d62 <__swsetup_r+0x16>
 8000d58:	69ab      	ldr	r3, [r5, #24]
 8000d5a:	b913      	cbnz	r3, 8000d62 <__swsetup_r+0x16>
 8000d5c:	4628      	mov	r0, r5
 8000d5e:	f000 f97d 	bl	800105c <__sinit>
 8000d62:	4b2e      	ldr	r3, [pc, #184]	; (8000e1c <__swsetup_r+0xd0>)
 8000d64:	429c      	cmp	r4, r3
 8000d66:	d10f      	bne.n	8000d88 <__swsetup_r+0x3c>
 8000d68:	686c      	ldr	r4, [r5, #4]
 8000d6a:	89a3      	ldrh	r3, [r4, #12]
 8000d6c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000d70:	0719      	lsls	r1, r3, #28
 8000d72:	d42c      	bmi.n	8000dce <__swsetup_r+0x82>
 8000d74:	06dd      	lsls	r5, r3, #27
 8000d76:	d411      	bmi.n	8000d9c <__swsetup_r+0x50>
 8000d78:	2309      	movs	r3, #9
 8000d7a:	6033      	str	r3, [r6, #0]
 8000d7c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000d80:	81a3      	strh	r3, [r4, #12]
 8000d82:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d86:	e03e      	b.n	8000e06 <__swsetup_r+0xba>
 8000d88:	4b25      	ldr	r3, [pc, #148]	; (8000e20 <__swsetup_r+0xd4>)
 8000d8a:	429c      	cmp	r4, r3
 8000d8c:	d101      	bne.n	8000d92 <__swsetup_r+0x46>
 8000d8e:	68ac      	ldr	r4, [r5, #8]
 8000d90:	e7eb      	b.n	8000d6a <__swsetup_r+0x1e>
 8000d92:	4b24      	ldr	r3, [pc, #144]	; (8000e24 <__swsetup_r+0xd8>)
 8000d94:	429c      	cmp	r4, r3
 8000d96:	bf08      	it	eq
 8000d98:	68ec      	ldreq	r4, [r5, #12]
 8000d9a:	e7e6      	b.n	8000d6a <__swsetup_r+0x1e>
 8000d9c:	0758      	lsls	r0, r3, #29
 8000d9e:	d512      	bpl.n	8000dc6 <__swsetup_r+0x7a>
 8000da0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000da2:	b141      	cbz	r1, 8000db6 <__swsetup_r+0x6a>
 8000da4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000da8:	4299      	cmp	r1, r3
 8000daa:	d002      	beq.n	8000db2 <__swsetup_r+0x66>
 8000dac:	4630      	mov	r0, r6
 8000dae:	f000 fa59 	bl	8001264 <_free_r>
 8000db2:	2300      	movs	r3, #0
 8000db4:	6363      	str	r3, [r4, #52]	; 0x34
 8000db6:	89a3      	ldrh	r3, [r4, #12]
 8000db8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000dbc:	81a3      	strh	r3, [r4, #12]
 8000dbe:	2300      	movs	r3, #0
 8000dc0:	6063      	str	r3, [r4, #4]
 8000dc2:	6923      	ldr	r3, [r4, #16]
 8000dc4:	6023      	str	r3, [r4, #0]
 8000dc6:	89a3      	ldrh	r3, [r4, #12]
 8000dc8:	f043 0308 	orr.w	r3, r3, #8
 8000dcc:	81a3      	strh	r3, [r4, #12]
 8000dce:	6923      	ldr	r3, [r4, #16]
 8000dd0:	b94b      	cbnz	r3, 8000de6 <__swsetup_r+0x9a>
 8000dd2:	89a3      	ldrh	r3, [r4, #12]
 8000dd4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000dd8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000ddc:	d003      	beq.n	8000de6 <__swsetup_r+0x9a>
 8000dde:	4621      	mov	r1, r4
 8000de0:	4630      	mov	r0, r6
 8000de2:	f000 f9ff 	bl	80011e4 <__smakebuf_r>
 8000de6:	89a0      	ldrh	r0, [r4, #12]
 8000de8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000dec:	f010 0301 	ands.w	r3, r0, #1
 8000df0:	d00a      	beq.n	8000e08 <__swsetup_r+0xbc>
 8000df2:	2300      	movs	r3, #0
 8000df4:	60a3      	str	r3, [r4, #8]
 8000df6:	6963      	ldr	r3, [r4, #20]
 8000df8:	425b      	negs	r3, r3
 8000dfa:	61a3      	str	r3, [r4, #24]
 8000dfc:	6923      	ldr	r3, [r4, #16]
 8000dfe:	b943      	cbnz	r3, 8000e12 <__swsetup_r+0xc6>
 8000e00:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000e04:	d1ba      	bne.n	8000d7c <__swsetup_r+0x30>
 8000e06:	bd70      	pop	{r4, r5, r6, pc}
 8000e08:	0781      	lsls	r1, r0, #30
 8000e0a:	bf58      	it	pl
 8000e0c:	6963      	ldrpl	r3, [r4, #20]
 8000e0e:	60a3      	str	r3, [r4, #8]
 8000e10:	e7f4      	b.n	8000dfc <__swsetup_r+0xb0>
 8000e12:	2000      	movs	r0, #0
 8000e14:	e7f7      	b.n	8000e06 <__swsetup_r+0xba>
 8000e16:	bf00      	nop
 8000e18:	20000004 	.word	0x20000004
 8000e1c:	08001700 	.word	0x08001700
 8000e20:	08001720 	.word	0x08001720
 8000e24:	080016e0 	.word	0x080016e0

08000e28 <__sflush_r>:
 8000e28:	898a      	ldrh	r2, [r1, #12]
 8000e2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e2e:	4605      	mov	r5, r0
 8000e30:	0710      	lsls	r0, r2, #28
 8000e32:	460c      	mov	r4, r1
 8000e34:	d458      	bmi.n	8000ee8 <__sflush_r+0xc0>
 8000e36:	684b      	ldr	r3, [r1, #4]
 8000e38:	2b00      	cmp	r3, #0
 8000e3a:	dc05      	bgt.n	8000e48 <__sflush_r+0x20>
 8000e3c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000e3e:	2b00      	cmp	r3, #0
 8000e40:	dc02      	bgt.n	8000e48 <__sflush_r+0x20>
 8000e42:	2000      	movs	r0, #0
 8000e44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e48:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e4a:	2e00      	cmp	r6, #0
 8000e4c:	d0f9      	beq.n	8000e42 <__sflush_r+0x1a>
 8000e4e:	2300      	movs	r3, #0
 8000e50:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000e54:	682f      	ldr	r7, [r5, #0]
 8000e56:	602b      	str	r3, [r5, #0]
 8000e58:	d032      	beq.n	8000ec0 <__sflush_r+0x98>
 8000e5a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000e5c:	89a3      	ldrh	r3, [r4, #12]
 8000e5e:	075a      	lsls	r2, r3, #29
 8000e60:	d505      	bpl.n	8000e6e <__sflush_r+0x46>
 8000e62:	6863      	ldr	r3, [r4, #4]
 8000e64:	1ac0      	subs	r0, r0, r3
 8000e66:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000e68:	b10b      	cbz	r3, 8000e6e <__sflush_r+0x46>
 8000e6a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000e6c:	1ac0      	subs	r0, r0, r3
 8000e6e:	2300      	movs	r3, #0
 8000e70:	4602      	mov	r2, r0
 8000e72:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e74:	6a21      	ldr	r1, [r4, #32]
 8000e76:	4628      	mov	r0, r5
 8000e78:	47b0      	blx	r6
 8000e7a:	1c43      	adds	r3, r0, #1
 8000e7c:	89a3      	ldrh	r3, [r4, #12]
 8000e7e:	d106      	bne.n	8000e8e <__sflush_r+0x66>
 8000e80:	6829      	ldr	r1, [r5, #0]
 8000e82:	291d      	cmp	r1, #29
 8000e84:	d82c      	bhi.n	8000ee0 <__sflush_r+0xb8>
 8000e86:	4a2a      	ldr	r2, [pc, #168]	; (8000f30 <__sflush_r+0x108>)
 8000e88:	40ca      	lsrs	r2, r1
 8000e8a:	07d6      	lsls	r6, r2, #31
 8000e8c:	d528      	bpl.n	8000ee0 <__sflush_r+0xb8>
 8000e8e:	2200      	movs	r2, #0
 8000e90:	6062      	str	r2, [r4, #4]
 8000e92:	04d9      	lsls	r1, r3, #19
 8000e94:	6922      	ldr	r2, [r4, #16]
 8000e96:	6022      	str	r2, [r4, #0]
 8000e98:	d504      	bpl.n	8000ea4 <__sflush_r+0x7c>
 8000e9a:	1c42      	adds	r2, r0, #1
 8000e9c:	d101      	bne.n	8000ea2 <__sflush_r+0x7a>
 8000e9e:	682b      	ldr	r3, [r5, #0]
 8000ea0:	b903      	cbnz	r3, 8000ea4 <__sflush_r+0x7c>
 8000ea2:	6560      	str	r0, [r4, #84]	; 0x54
 8000ea4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ea6:	602f      	str	r7, [r5, #0]
 8000ea8:	2900      	cmp	r1, #0
 8000eaa:	d0ca      	beq.n	8000e42 <__sflush_r+0x1a>
 8000eac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000eb0:	4299      	cmp	r1, r3
 8000eb2:	d002      	beq.n	8000eba <__sflush_r+0x92>
 8000eb4:	4628      	mov	r0, r5
 8000eb6:	f000 f9d5 	bl	8001264 <_free_r>
 8000eba:	2000      	movs	r0, #0
 8000ebc:	6360      	str	r0, [r4, #52]	; 0x34
 8000ebe:	e7c1      	b.n	8000e44 <__sflush_r+0x1c>
 8000ec0:	6a21      	ldr	r1, [r4, #32]
 8000ec2:	2301      	movs	r3, #1
 8000ec4:	4628      	mov	r0, r5
 8000ec6:	47b0      	blx	r6
 8000ec8:	1c41      	adds	r1, r0, #1
 8000eca:	d1c7      	bne.n	8000e5c <__sflush_r+0x34>
 8000ecc:	682b      	ldr	r3, [r5, #0]
 8000ece:	2b00      	cmp	r3, #0
 8000ed0:	d0c4      	beq.n	8000e5c <__sflush_r+0x34>
 8000ed2:	2b1d      	cmp	r3, #29
 8000ed4:	d001      	beq.n	8000eda <__sflush_r+0xb2>
 8000ed6:	2b16      	cmp	r3, #22
 8000ed8:	d101      	bne.n	8000ede <__sflush_r+0xb6>
 8000eda:	602f      	str	r7, [r5, #0]
 8000edc:	e7b1      	b.n	8000e42 <__sflush_r+0x1a>
 8000ede:	89a3      	ldrh	r3, [r4, #12]
 8000ee0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ee4:	81a3      	strh	r3, [r4, #12]
 8000ee6:	e7ad      	b.n	8000e44 <__sflush_r+0x1c>
 8000ee8:	690f      	ldr	r7, [r1, #16]
 8000eea:	2f00      	cmp	r7, #0
 8000eec:	d0a9      	beq.n	8000e42 <__sflush_r+0x1a>
 8000eee:	0793      	lsls	r3, r2, #30
 8000ef0:	680e      	ldr	r6, [r1, #0]
 8000ef2:	bf08      	it	eq
 8000ef4:	694b      	ldreq	r3, [r1, #20]
 8000ef6:	600f      	str	r7, [r1, #0]
 8000ef8:	bf18      	it	ne
 8000efa:	2300      	movne	r3, #0
 8000efc:	eba6 0807 	sub.w	r8, r6, r7
 8000f00:	608b      	str	r3, [r1, #8]
 8000f02:	f1b8 0f00 	cmp.w	r8, #0
 8000f06:	dd9c      	ble.n	8000e42 <__sflush_r+0x1a>
 8000f08:	6a21      	ldr	r1, [r4, #32]
 8000f0a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000f0c:	4643      	mov	r3, r8
 8000f0e:	463a      	mov	r2, r7
 8000f10:	4628      	mov	r0, r5
 8000f12:	47b0      	blx	r6
 8000f14:	2800      	cmp	r0, #0
 8000f16:	dc06      	bgt.n	8000f26 <__sflush_r+0xfe>
 8000f18:	89a3      	ldrh	r3, [r4, #12]
 8000f1a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f1e:	81a3      	strh	r3, [r4, #12]
 8000f20:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f24:	e78e      	b.n	8000e44 <__sflush_r+0x1c>
 8000f26:	4407      	add	r7, r0
 8000f28:	eba8 0800 	sub.w	r8, r8, r0
 8000f2c:	e7e9      	b.n	8000f02 <__sflush_r+0xda>
 8000f2e:	bf00      	nop
 8000f30:	20400001 	.word	0x20400001

08000f34 <_fflush_r>:
 8000f34:	b538      	push	{r3, r4, r5, lr}
 8000f36:	690b      	ldr	r3, [r1, #16]
 8000f38:	4605      	mov	r5, r0
 8000f3a:	460c      	mov	r4, r1
 8000f3c:	b913      	cbnz	r3, 8000f44 <_fflush_r+0x10>
 8000f3e:	2500      	movs	r5, #0
 8000f40:	4628      	mov	r0, r5
 8000f42:	bd38      	pop	{r3, r4, r5, pc}
 8000f44:	b118      	cbz	r0, 8000f4e <_fflush_r+0x1a>
 8000f46:	6983      	ldr	r3, [r0, #24]
 8000f48:	b90b      	cbnz	r3, 8000f4e <_fflush_r+0x1a>
 8000f4a:	f000 f887 	bl	800105c <__sinit>
 8000f4e:	4b14      	ldr	r3, [pc, #80]	; (8000fa0 <_fflush_r+0x6c>)
 8000f50:	429c      	cmp	r4, r3
 8000f52:	d11b      	bne.n	8000f8c <_fflush_r+0x58>
 8000f54:	686c      	ldr	r4, [r5, #4]
 8000f56:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d0ef      	beq.n	8000f3e <_fflush_r+0xa>
 8000f5e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000f60:	07d0      	lsls	r0, r2, #31
 8000f62:	d404      	bmi.n	8000f6e <_fflush_r+0x3a>
 8000f64:	0599      	lsls	r1, r3, #22
 8000f66:	d402      	bmi.n	8000f6e <_fflush_r+0x3a>
 8000f68:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000f6a:	f000 f915 	bl	8001198 <__retarget_lock_acquire_recursive>
 8000f6e:	4628      	mov	r0, r5
 8000f70:	4621      	mov	r1, r4
 8000f72:	f7ff ff59 	bl	8000e28 <__sflush_r>
 8000f76:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000f78:	07da      	lsls	r2, r3, #31
 8000f7a:	4605      	mov	r5, r0
 8000f7c:	d4e0      	bmi.n	8000f40 <_fflush_r+0xc>
 8000f7e:	89a3      	ldrh	r3, [r4, #12]
 8000f80:	059b      	lsls	r3, r3, #22
 8000f82:	d4dd      	bmi.n	8000f40 <_fflush_r+0xc>
 8000f84:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000f86:	f000 f908 	bl	800119a <__retarget_lock_release_recursive>
 8000f8a:	e7d9      	b.n	8000f40 <_fflush_r+0xc>
 8000f8c:	4b05      	ldr	r3, [pc, #20]	; (8000fa4 <_fflush_r+0x70>)
 8000f8e:	429c      	cmp	r4, r3
 8000f90:	d101      	bne.n	8000f96 <_fflush_r+0x62>
 8000f92:	68ac      	ldr	r4, [r5, #8]
 8000f94:	e7df      	b.n	8000f56 <_fflush_r+0x22>
 8000f96:	4b04      	ldr	r3, [pc, #16]	; (8000fa8 <_fflush_r+0x74>)
 8000f98:	429c      	cmp	r4, r3
 8000f9a:	bf08      	it	eq
 8000f9c:	68ec      	ldreq	r4, [r5, #12]
 8000f9e:	e7da      	b.n	8000f56 <_fflush_r+0x22>
 8000fa0:	08001700 	.word	0x08001700
 8000fa4:	08001720 	.word	0x08001720
 8000fa8:	080016e0 	.word	0x080016e0

08000fac <std>:
 8000fac:	2300      	movs	r3, #0
 8000fae:	b510      	push	{r4, lr}
 8000fb0:	4604      	mov	r4, r0
 8000fb2:	e9c0 3300 	strd	r3, r3, [r0]
 8000fb6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000fba:	6083      	str	r3, [r0, #8]
 8000fbc:	8181      	strh	r1, [r0, #12]
 8000fbe:	6643      	str	r3, [r0, #100]	; 0x64
 8000fc0:	81c2      	strh	r2, [r0, #14]
 8000fc2:	6183      	str	r3, [r0, #24]
 8000fc4:	4619      	mov	r1, r3
 8000fc6:	2208      	movs	r2, #8
 8000fc8:	305c      	adds	r0, #92	; 0x5c
 8000fca:	f7ff fb3f 	bl	800064c <memset>
 8000fce:	4b05      	ldr	r3, [pc, #20]	; (8000fe4 <std+0x38>)
 8000fd0:	6263      	str	r3, [r4, #36]	; 0x24
 8000fd2:	4b05      	ldr	r3, [pc, #20]	; (8000fe8 <std+0x3c>)
 8000fd4:	62a3      	str	r3, [r4, #40]	; 0x28
 8000fd6:	4b05      	ldr	r3, [pc, #20]	; (8000fec <std+0x40>)
 8000fd8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fda:	4b05      	ldr	r3, [pc, #20]	; (8000ff0 <std+0x44>)
 8000fdc:	6224      	str	r4, [r4, #32]
 8000fde:	6323      	str	r3, [r4, #48]	; 0x30
 8000fe0:	bd10      	pop	{r4, pc}
 8000fe2:	bf00      	nop
 8000fe4:	08001469 	.word	0x08001469
 8000fe8:	0800148b 	.word	0x0800148b
 8000fec:	080014c3 	.word	0x080014c3
 8000ff0:	080014e7 	.word	0x080014e7

08000ff4 <_cleanup_r>:
 8000ff4:	4901      	ldr	r1, [pc, #4]	; (8000ffc <_cleanup_r+0x8>)
 8000ff6:	f000 b8af 	b.w	8001158 <_fwalk_reent>
 8000ffa:	bf00      	nop
 8000ffc:	08000f35 	.word	0x08000f35

08001000 <__sfmoreglue>:
 8001000:	b570      	push	{r4, r5, r6, lr}
 8001002:	1e4a      	subs	r2, r1, #1
 8001004:	2568      	movs	r5, #104	; 0x68
 8001006:	4355      	muls	r5, r2
 8001008:	460e      	mov	r6, r1
 800100a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800100e:	f000 f979 	bl	8001304 <_malloc_r>
 8001012:	4604      	mov	r4, r0
 8001014:	b140      	cbz	r0, 8001028 <__sfmoreglue+0x28>
 8001016:	2100      	movs	r1, #0
 8001018:	e9c0 1600 	strd	r1, r6, [r0]
 800101c:	300c      	adds	r0, #12
 800101e:	60a0      	str	r0, [r4, #8]
 8001020:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001024:	f7ff fb12 	bl	800064c <memset>
 8001028:	4620      	mov	r0, r4
 800102a:	bd70      	pop	{r4, r5, r6, pc}

0800102c <__sfp_lock_acquire>:
 800102c:	4801      	ldr	r0, [pc, #4]	; (8001034 <__sfp_lock_acquire+0x8>)
 800102e:	f000 b8b3 	b.w	8001198 <__retarget_lock_acquire_recursive>
 8001032:	bf00      	nop
 8001034:	20000098 	.word	0x20000098

08001038 <__sfp_lock_release>:
 8001038:	4801      	ldr	r0, [pc, #4]	; (8001040 <__sfp_lock_release+0x8>)
 800103a:	f000 b8ae 	b.w	800119a <__retarget_lock_release_recursive>
 800103e:	bf00      	nop
 8001040:	20000098 	.word	0x20000098

08001044 <__sinit_lock_acquire>:
 8001044:	4801      	ldr	r0, [pc, #4]	; (800104c <__sinit_lock_acquire+0x8>)
 8001046:	f000 b8a7 	b.w	8001198 <__retarget_lock_acquire_recursive>
 800104a:	bf00      	nop
 800104c:	20000093 	.word	0x20000093

08001050 <__sinit_lock_release>:
 8001050:	4801      	ldr	r0, [pc, #4]	; (8001058 <__sinit_lock_release+0x8>)
 8001052:	f000 b8a2 	b.w	800119a <__retarget_lock_release_recursive>
 8001056:	bf00      	nop
 8001058:	20000093 	.word	0x20000093

0800105c <__sinit>:
 800105c:	b510      	push	{r4, lr}
 800105e:	4604      	mov	r4, r0
 8001060:	f7ff fff0 	bl	8001044 <__sinit_lock_acquire>
 8001064:	69a3      	ldr	r3, [r4, #24]
 8001066:	b11b      	cbz	r3, 8001070 <__sinit+0x14>
 8001068:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800106c:	f7ff bff0 	b.w	8001050 <__sinit_lock_release>
 8001070:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8001074:	6523      	str	r3, [r4, #80]	; 0x50
 8001076:	4b13      	ldr	r3, [pc, #76]	; (80010c4 <__sinit+0x68>)
 8001078:	4a13      	ldr	r2, [pc, #76]	; (80010c8 <__sinit+0x6c>)
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	62a2      	str	r2, [r4, #40]	; 0x28
 800107e:	42a3      	cmp	r3, r4
 8001080:	bf04      	itt	eq
 8001082:	2301      	moveq	r3, #1
 8001084:	61a3      	streq	r3, [r4, #24]
 8001086:	4620      	mov	r0, r4
 8001088:	f000 f820 	bl	80010cc <__sfp>
 800108c:	6060      	str	r0, [r4, #4]
 800108e:	4620      	mov	r0, r4
 8001090:	f000 f81c 	bl	80010cc <__sfp>
 8001094:	60a0      	str	r0, [r4, #8]
 8001096:	4620      	mov	r0, r4
 8001098:	f000 f818 	bl	80010cc <__sfp>
 800109c:	2200      	movs	r2, #0
 800109e:	60e0      	str	r0, [r4, #12]
 80010a0:	2104      	movs	r1, #4
 80010a2:	6860      	ldr	r0, [r4, #4]
 80010a4:	f7ff ff82 	bl	8000fac <std>
 80010a8:	68a0      	ldr	r0, [r4, #8]
 80010aa:	2201      	movs	r2, #1
 80010ac:	2109      	movs	r1, #9
 80010ae:	f7ff ff7d 	bl	8000fac <std>
 80010b2:	68e0      	ldr	r0, [r4, #12]
 80010b4:	2202      	movs	r2, #2
 80010b6:	2112      	movs	r1, #18
 80010b8:	f7ff ff78 	bl	8000fac <std>
 80010bc:	2301      	movs	r3, #1
 80010be:	61a3      	str	r3, [r4, #24]
 80010c0:	e7d2      	b.n	8001068 <__sinit+0xc>
 80010c2:	bf00      	nop
 80010c4:	080016a8 	.word	0x080016a8
 80010c8:	08000ff5 	.word	0x08000ff5

080010cc <__sfp>:
 80010cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ce:	4607      	mov	r7, r0
 80010d0:	f7ff ffac 	bl	800102c <__sfp_lock_acquire>
 80010d4:	4b1e      	ldr	r3, [pc, #120]	; (8001150 <__sfp+0x84>)
 80010d6:	681e      	ldr	r6, [r3, #0]
 80010d8:	69b3      	ldr	r3, [r6, #24]
 80010da:	b913      	cbnz	r3, 80010e2 <__sfp+0x16>
 80010dc:	4630      	mov	r0, r6
 80010de:	f7ff ffbd 	bl	800105c <__sinit>
 80010e2:	3648      	adds	r6, #72	; 0x48
 80010e4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80010e8:	3b01      	subs	r3, #1
 80010ea:	d503      	bpl.n	80010f4 <__sfp+0x28>
 80010ec:	6833      	ldr	r3, [r6, #0]
 80010ee:	b30b      	cbz	r3, 8001134 <__sfp+0x68>
 80010f0:	6836      	ldr	r6, [r6, #0]
 80010f2:	e7f7      	b.n	80010e4 <__sfp+0x18>
 80010f4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80010f8:	b9d5      	cbnz	r5, 8001130 <__sfp+0x64>
 80010fa:	4b16      	ldr	r3, [pc, #88]	; (8001154 <__sfp+0x88>)
 80010fc:	60e3      	str	r3, [r4, #12]
 80010fe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001102:	6665      	str	r5, [r4, #100]	; 0x64
 8001104:	f000 f847 	bl	8001196 <__retarget_lock_init_recursive>
 8001108:	f7ff ff96 	bl	8001038 <__sfp_lock_release>
 800110c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8001110:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8001114:	6025      	str	r5, [r4, #0]
 8001116:	61a5      	str	r5, [r4, #24]
 8001118:	2208      	movs	r2, #8
 800111a:	4629      	mov	r1, r5
 800111c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001120:	f7ff fa94 	bl	800064c <memset>
 8001124:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001128:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800112c:	4620      	mov	r0, r4
 800112e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001130:	3468      	adds	r4, #104	; 0x68
 8001132:	e7d9      	b.n	80010e8 <__sfp+0x1c>
 8001134:	2104      	movs	r1, #4
 8001136:	4638      	mov	r0, r7
 8001138:	f7ff ff62 	bl	8001000 <__sfmoreglue>
 800113c:	4604      	mov	r4, r0
 800113e:	6030      	str	r0, [r6, #0]
 8001140:	2800      	cmp	r0, #0
 8001142:	d1d5      	bne.n	80010f0 <__sfp+0x24>
 8001144:	f7ff ff78 	bl	8001038 <__sfp_lock_release>
 8001148:	230c      	movs	r3, #12
 800114a:	603b      	str	r3, [r7, #0]
 800114c:	e7ee      	b.n	800112c <__sfp+0x60>
 800114e:	bf00      	nop
 8001150:	080016a8 	.word	0x080016a8
 8001154:	ffff0001 	.word	0xffff0001

08001158 <_fwalk_reent>:
 8001158:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800115c:	4606      	mov	r6, r0
 800115e:	4688      	mov	r8, r1
 8001160:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8001164:	2700      	movs	r7, #0
 8001166:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800116a:	f1b9 0901 	subs.w	r9, r9, #1
 800116e:	d505      	bpl.n	800117c <_fwalk_reent+0x24>
 8001170:	6824      	ldr	r4, [r4, #0]
 8001172:	2c00      	cmp	r4, #0
 8001174:	d1f7      	bne.n	8001166 <_fwalk_reent+0xe>
 8001176:	4638      	mov	r0, r7
 8001178:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800117c:	89ab      	ldrh	r3, [r5, #12]
 800117e:	2b01      	cmp	r3, #1
 8001180:	d907      	bls.n	8001192 <_fwalk_reent+0x3a>
 8001182:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001186:	3301      	adds	r3, #1
 8001188:	d003      	beq.n	8001192 <_fwalk_reent+0x3a>
 800118a:	4629      	mov	r1, r5
 800118c:	4630      	mov	r0, r6
 800118e:	47c0      	blx	r8
 8001190:	4307      	orrs	r7, r0
 8001192:	3568      	adds	r5, #104	; 0x68
 8001194:	e7e9      	b.n	800116a <_fwalk_reent+0x12>

08001196 <__retarget_lock_init_recursive>:
 8001196:	4770      	bx	lr

08001198 <__retarget_lock_acquire_recursive>:
 8001198:	4770      	bx	lr

0800119a <__retarget_lock_release_recursive>:
 800119a:	4770      	bx	lr

0800119c <__swhatbuf_r>:
 800119c:	b570      	push	{r4, r5, r6, lr}
 800119e:	460e      	mov	r6, r1
 80011a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011a4:	2900      	cmp	r1, #0
 80011a6:	b096      	sub	sp, #88	; 0x58
 80011a8:	4614      	mov	r4, r2
 80011aa:	461d      	mov	r5, r3
 80011ac:	da07      	bge.n	80011be <__swhatbuf_r+0x22>
 80011ae:	2300      	movs	r3, #0
 80011b0:	602b      	str	r3, [r5, #0]
 80011b2:	89b3      	ldrh	r3, [r6, #12]
 80011b4:	061a      	lsls	r2, r3, #24
 80011b6:	d410      	bmi.n	80011da <__swhatbuf_r+0x3e>
 80011b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011bc:	e00e      	b.n	80011dc <__swhatbuf_r+0x40>
 80011be:	466a      	mov	r2, sp
 80011c0:	f000 f9b8 	bl	8001534 <_fstat_r>
 80011c4:	2800      	cmp	r0, #0
 80011c6:	dbf2      	blt.n	80011ae <__swhatbuf_r+0x12>
 80011c8:	9a01      	ldr	r2, [sp, #4]
 80011ca:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80011ce:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80011d2:	425a      	negs	r2, r3
 80011d4:	415a      	adcs	r2, r3
 80011d6:	602a      	str	r2, [r5, #0]
 80011d8:	e7ee      	b.n	80011b8 <__swhatbuf_r+0x1c>
 80011da:	2340      	movs	r3, #64	; 0x40
 80011dc:	2000      	movs	r0, #0
 80011de:	6023      	str	r3, [r4, #0]
 80011e0:	b016      	add	sp, #88	; 0x58
 80011e2:	bd70      	pop	{r4, r5, r6, pc}

080011e4 <__smakebuf_r>:
 80011e4:	898b      	ldrh	r3, [r1, #12]
 80011e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80011e8:	079d      	lsls	r5, r3, #30
 80011ea:	4606      	mov	r6, r0
 80011ec:	460c      	mov	r4, r1
 80011ee:	d507      	bpl.n	8001200 <__smakebuf_r+0x1c>
 80011f0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80011f4:	6023      	str	r3, [r4, #0]
 80011f6:	6123      	str	r3, [r4, #16]
 80011f8:	2301      	movs	r3, #1
 80011fa:	6163      	str	r3, [r4, #20]
 80011fc:	b002      	add	sp, #8
 80011fe:	bd70      	pop	{r4, r5, r6, pc}
 8001200:	ab01      	add	r3, sp, #4
 8001202:	466a      	mov	r2, sp
 8001204:	f7ff ffca 	bl	800119c <__swhatbuf_r>
 8001208:	9900      	ldr	r1, [sp, #0]
 800120a:	4605      	mov	r5, r0
 800120c:	4630      	mov	r0, r6
 800120e:	f000 f879 	bl	8001304 <_malloc_r>
 8001212:	b948      	cbnz	r0, 8001228 <__smakebuf_r+0x44>
 8001214:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001218:	059a      	lsls	r2, r3, #22
 800121a:	d4ef      	bmi.n	80011fc <__smakebuf_r+0x18>
 800121c:	f023 0303 	bic.w	r3, r3, #3
 8001220:	f043 0302 	orr.w	r3, r3, #2
 8001224:	81a3      	strh	r3, [r4, #12]
 8001226:	e7e3      	b.n	80011f0 <__smakebuf_r+0xc>
 8001228:	4b0d      	ldr	r3, [pc, #52]	; (8001260 <__smakebuf_r+0x7c>)
 800122a:	62b3      	str	r3, [r6, #40]	; 0x28
 800122c:	89a3      	ldrh	r3, [r4, #12]
 800122e:	6020      	str	r0, [r4, #0]
 8001230:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001234:	81a3      	strh	r3, [r4, #12]
 8001236:	9b00      	ldr	r3, [sp, #0]
 8001238:	6163      	str	r3, [r4, #20]
 800123a:	9b01      	ldr	r3, [sp, #4]
 800123c:	6120      	str	r0, [r4, #16]
 800123e:	b15b      	cbz	r3, 8001258 <__smakebuf_r+0x74>
 8001240:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001244:	4630      	mov	r0, r6
 8001246:	f000 f987 	bl	8001558 <_isatty_r>
 800124a:	b128      	cbz	r0, 8001258 <__smakebuf_r+0x74>
 800124c:	89a3      	ldrh	r3, [r4, #12]
 800124e:	f023 0303 	bic.w	r3, r3, #3
 8001252:	f043 0301 	orr.w	r3, r3, #1
 8001256:	81a3      	strh	r3, [r4, #12]
 8001258:	89a0      	ldrh	r0, [r4, #12]
 800125a:	4305      	orrs	r5, r0
 800125c:	81a5      	strh	r5, [r4, #12]
 800125e:	e7cd      	b.n	80011fc <__smakebuf_r+0x18>
 8001260:	08000ff5 	.word	0x08000ff5

08001264 <_free_r>:
 8001264:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001266:	2900      	cmp	r1, #0
 8001268:	d048      	beq.n	80012fc <_free_r+0x98>
 800126a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800126e:	9001      	str	r0, [sp, #4]
 8001270:	2b00      	cmp	r3, #0
 8001272:	f1a1 0404 	sub.w	r4, r1, #4
 8001276:	bfb8      	it	lt
 8001278:	18e4      	addlt	r4, r4, r3
 800127a:	f000 f98f 	bl	800159c <__malloc_lock>
 800127e:	4a20      	ldr	r2, [pc, #128]	; (8001300 <_free_r+0x9c>)
 8001280:	9801      	ldr	r0, [sp, #4]
 8001282:	6813      	ldr	r3, [r2, #0]
 8001284:	4615      	mov	r5, r2
 8001286:	b933      	cbnz	r3, 8001296 <_free_r+0x32>
 8001288:	6063      	str	r3, [r4, #4]
 800128a:	6014      	str	r4, [r2, #0]
 800128c:	b003      	add	sp, #12
 800128e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001292:	f000 b989 	b.w	80015a8 <__malloc_unlock>
 8001296:	42a3      	cmp	r3, r4
 8001298:	d90b      	bls.n	80012b2 <_free_r+0x4e>
 800129a:	6821      	ldr	r1, [r4, #0]
 800129c:	1862      	adds	r2, r4, r1
 800129e:	4293      	cmp	r3, r2
 80012a0:	bf04      	itt	eq
 80012a2:	681a      	ldreq	r2, [r3, #0]
 80012a4:	685b      	ldreq	r3, [r3, #4]
 80012a6:	6063      	str	r3, [r4, #4]
 80012a8:	bf04      	itt	eq
 80012aa:	1852      	addeq	r2, r2, r1
 80012ac:	6022      	streq	r2, [r4, #0]
 80012ae:	602c      	str	r4, [r5, #0]
 80012b0:	e7ec      	b.n	800128c <_free_r+0x28>
 80012b2:	461a      	mov	r2, r3
 80012b4:	685b      	ldr	r3, [r3, #4]
 80012b6:	b10b      	cbz	r3, 80012bc <_free_r+0x58>
 80012b8:	42a3      	cmp	r3, r4
 80012ba:	d9fa      	bls.n	80012b2 <_free_r+0x4e>
 80012bc:	6811      	ldr	r1, [r2, #0]
 80012be:	1855      	adds	r5, r2, r1
 80012c0:	42a5      	cmp	r5, r4
 80012c2:	d10b      	bne.n	80012dc <_free_r+0x78>
 80012c4:	6824      	ldr	r4, [r4, #0]
 80012c6:	4421      	add	r1, r4
 80012c8:	1854      	adds	r4, r2, r1
 80012ca:	42a3      	cmp	r3, r4
 80012cc:	6011      	str	r1, [r2, #0]
 80012ce:	d1dd      	bne.n	800128c <_free_r+0x28>
 80012d0:	681c      	ldr	r4, [r3, #0]
 80012d2:	685b      	ldr	r3, [r3, #4]
 80012d4:	6053      	str	r3, [r2, #4]
 80012d6:	4421      	add	r1, r4
 80012d8:	6011      	str	r1, [r2, #0]
 80012da:	e7d7      	b.n	800128c <_free_r+0x28>
 80012dc:	d902      	bls.n	80012e4 <_free_r+0x80>
 80012de:	230c      	movs	r3, #12
 80012e0:	6003      	str	r3, [r0, #0]
 80012e2:	e7d3      	b.n	800128c <_free_r+0x28>
 80012e4:	6825      	ldr	r5, [r4, #0]
 80012e6:	1961      	adds	r1, r4, r5
 80012e8:	428b      	cmp	r3, r1
 80012ea:	bf04      	itt	eq
 80012ec:	6819      	ldreq	r1, [r3, #0]
 80012ee:	685b      	ldreq	r3, [r3, #4]
 80012f0:	6063      	str	r3, [r4, #4]
 80012f2:	bf04      	itt	eq
 80012f4:	1949      	addeq	r1, r1, r5
 80012f6:	6021      	streq	r1, [r4, #0]
 80012f8:	6054      	str	r4, [r2, #4]
 80012fa:	e7c7      	b.n	800128c <_free_r+0x28>
 80012fc:	b003      	add	sp, #12
 80012fe:	bd30      	pop	{r4, r5, pc}
 8001300:	20000084 	.word	0x20000084

08001304 <_malloc_r>:
 8001304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001306:	1ccd      	adds	r5, r1, #3
 8001308:	f025 0503 	bic.w	r5, r5, #3
 800130c:	3508      	adds	r5, #8
 800130e:	2d0c      	cmp	r5, #12
 8001310:	bf38      	it	cc
 8001312:	250c      	movcc	r5, #12
 8001314:	2d00      	cmp	r5, #0
 8001316:	4606      	mov	r6, r0
 8001318:	db01      	blt.n	800131e <_malloc_r+0x1a>
 800131a:	42a9      	cmp	r1, r5
 800131c:	d903      	bls.n	8001326 <_malloc_r+0x22>
 800131e:	230c      	movs	r3, #12
 8001320:	6033      	str	r3, [r6, #0]
 8001322:	2000      	movs	r0, #0
 8001324:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001326:	f000 f939 	bl	800159c <__malloc_lock>
 800132a:	4921      	ldr	r1, [pc, #132]	; (80013b0 <_malloc_r+0xac>)
 800132c:	680a      	ldr	r2, [r1, #0]
 800132e:	4614      	mov	r4, r2
 8001330:	b99c      	cbnz	r4, 800135a <_malloc_r+0x56>
 8001332:	4f20      	ldr	r7, [pc, #128]	; (80013b4 <_malloc_r+0xb0>)
 8001334:	683b      	ldr	r3, [r7, #0]
 8001336:	b923      	cbnz	r3, 8001342 <_malloc_r+0x3e>
 8001338:	4621      	mov	r1, r4
 800133a:	4630      	mov	r0, r6
 800133c:	f000 f884 	bl	8001448 <_sbrk_r>
 8001340:	6038      	str	r0, [r7, #0]
 8001342:	4629      	mov	r1, r5
 8001344:	4630      	mov	r0, r6
 8001346:	f000 f87f 	bl	8001448 <_sbrk_r>
 800134a:	1c43      	adds	r3, r0, #1
 800134c:	d123      	bne.n	8001396 <_malloc_r+0x92>
 800134e:	230c      	movs	r3, #12
 8001350:	6033      	str	r3, [r6, #0]
 8001352:	4630      	mov	r0, r6
 8001354:	f000 f928 	bl	80015a8 <__malloc_unlock>
 8001358:	e7e3      	b.n	8001322 <_malloc_r+0x1e>
 800135a:	6823      	ldr	r3, [r4, #0]
 800135c:	1b5b      	subs	r3, r3, r5
 800135e:	d417      	bmi.n	8001390 <_malloc_r+0x8c>
 8001360:	2b0b      	cmp	r3, #11
 8001362:	d903      	bls.n	800136c <_malloc_r+0x68>
 8001364:	6023      	str	r3, [r4, #0]
 8001366:	441c      	add	r4, r3
 8001368:	6025      	str	r5, [r4, #0]
 800136a:	e004      	b.n	8001376 <_malloc_r+0x72>
 800136c:	6863      	ldr	r3, [r4, #4]
 800136e:	42a2      	cmp	r2, r4
 8001370:	bf0c      	ite	eq
 8001372:	600b      	streq	r3, [r1, #0]
 8001374:	6053      	strne	r3, [r2, #4]
 8001376:	4630      	mov	r0, r6
 8001378:	f000 f916 	bl	80015a8 <__malloc_unlock>
 800137c:	f104 000b 	add.w	r0, r4, #11
 8001380:	1d23      	adds	r3, r4, #4
 8001382:	f020 0007 	bic.w	r0, r0, #7
 8001386:	1ac2      	subs	r2, r0, r3
 8001388:	d0cc      	beq.n	8001324 <_malloc_r+0x20>
 800138a:	1a1b      	subs	r3, r3, r0
 800138c:	50a3      	str	r3, [r4, r2]
 800138e:	e7c9      	b.n	8001324 <_malloc_r+0x20>
 8001390:	4622      	mov	r2, r4
 8001392:	6864      	ldr	r4, [r4, #4]
 8001394:	e7cc      	b.n	8001330 <_malloc_r+0x2c>
 8001396:	1cc4      	adds	r4, r0, #3
 8001398:	f024 0403 	bic.w	r4, r4, #3
 800139c:	42a0      	cmp	r0, r4
 800139e:	d0e3      	beq.n	8001368 <_malloc_r+0x64>
 80013a0:	1a21      	subs	r1, r4, r0
 80013a2:	4630      	mov	r0, r6
 80013a4:	f000 f850 	bl	8001448 <_sbrk_r>
 80013a8:	3001      	adds	r0, #1
 80013aa:	d1dd      	bne.n	8001368 <_malloc_r+0x64>
 80013ac:	e7cf      	b.n	800134e <_malloc_r+0x4a>
 80013ae:	bf00      	nop
 80013b0:	20000084 	.word	0x20000084
 80013b4:	20000088 	.word	0x20000088

080013b8 <_putc_r>:
 80013b8:	b570      	push	{r4, r5, r6, lr}
 80013ba:	460d      	mov	r5, r1
 80013bc:	4614      	mov	r4, r2
 80013be:	4606      	mov	r6, r0
 80013c0:	b118      	cbz	r0, 80013ca <_putc_r+0x12>
 80013c2:	6983      	ldr	r3, [r0, #24]
 80013c4:	b90b      	cbnz	r3, 80013ca <_putc_r+0x12>
 80013c6:	f7ff fe49 	bl	800105c <__sinit>
 80013ca:	4b1c      	ldr	r3, [pc, #112]	; (800143c <_putc_r+0x84>)
 80013cc:	429c      	cmp	r4, r3
 80013ce:	d124      	bne.n	800141a <_putc_r+0x62>
 80013d0:	6874      	ldr	r4, [r6, #4]
 80013d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80013d4:	07d8      	lsls	r0, r3, #31
 80013d6:	d405      	bmi.n	80013e4 <_putc_r+0x2c>
 80013d8:	89a3      	ldrh	r3, [r4, #12]
 80013da:	0599      	lsls	r1, r3, #22
 80013dc:	d402      	bmi.n	80013e4 <_putc_r+0x2c>
 80013de:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80013e0:	f7ff feda 	bl	8001198 <__retarget_lock_acquire_recursive>
 80013e4:	68a3      	ldr	r3, [r4, #8]
 80013e6:	3b01      	subs	r3, #1
 80013e8:	2b00      	cmp	r3, #0
 80013ea:	60a3      	str	r3, [r4, #8]
 80013ec:	da05      	bge.n	80013fa <_putc_r+0x42>
 80013ee:	69a2      	ldr	r2, [r4, #24]
 80013f0:	4293      	cmp	r3, r2
 80013f2:	db1c      	blt.n	800142e <_putc_r+0x76>
 80013f4:	b2eb      	uxtb	r3, r5
 80013f6:	2b0a      	cmp	r3, #10
 80013f8:	d019      	beq.n	800142e <_putc_r+0x76>
 80013fa:	6823      	ldr	r3, [r4, #0]
 80013fc:	1c5a      	adds	r2, r3, #1
 80013fe:	6022      	str	r2, [r4, #0]
 8001400:	701d      	strb	r5, [r3, #0]
 8001402:	b2ed      	uxtb	r5, r5
 8001404:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001406:	07da      	lsls	r2, r3, #31
 8001408:	d405      	bmi.n	8001416 <_putc_r+0x5e>
 800140a:	89a3      	ldrh	r3, [r4, #12]
 800140c:	059b      	lsls	r3, r3, #22
 800140e:	d402      	bmi.n	8001416 <_putc_r+0x5e>
 8001410:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001412:	f7ff fec2 	bl	800119a <__retarget_lock_release_recursive>
 8001416:	4628      	mov	r0, r5
 8001418:	bd70      	pop	{r4, r5, r6, pc}
 800141a:	4b09      	ldr	r3, [pc, #36]	; (8001440 <_putc_r+0x88>)
 800141c:	429c      	cmp	r4, r3
 800141e:	d101      	bne.n	8001424 <_putc_r+0x6c>
 8001420:	68b4      	ldr	r4, [r6, #8]
 8001422:	e7d6      	b.n	80013d2 <_putc_r+0x1a>
 8001424:	4b07      	ldr	r3, [pc, #28]	; (8001444 <_putc_r+0x8c>)
 8001426:	429c      	cmp	r4, r3
 8001428:	bf08      	it	eq
 800142a:	68f4      	ldreq	r4, [r6, #12]
 800142c:	e7d1      	b.n	80013d2 <_putc_r+0x1a>
 800142e:	4629      	mov	r1, r5
 8001430:	4622      	mov	r2, r4
 8001432:	4630      	mov	r0, r6
 8001434:	f7ff fc38 	bl	8000ca8 <__swbuf_r>
 8001438:	4605      	mov	r5, r0
 800143a:	e7e3      	b.n	8001404 <_putc_r+0x4c>
 800143c:	08001700 	.word	0x08001700
 8001440:	08001720 	.word	0x08001720
 8001444:	080016e0 	.word	0x080016e0

08001448 <_sbrk_r>:
 8001448:	b538      	push	{r3, r4, r5, lr}
 800144a:	4d06      	ldr	r5, [pc, #24]	; (8001464 <_sbrk_r+0x1c>)
 800144c:	2300      	movs	r3, #0
 800144e:	4604      	mov	r4, r0
 8001450:	4608      	mov	r0, r1
 8001452:	602b      	str	r3, [r5, #0]
 8001454:	f000 f8e8 	bl	8001628 <_sbrk>
 8001458:	1c43      	adds	r3, r0, #1
 800145a:	d102      	bne.n	8001462 <_sbrk_r+0x1a>
 800145c:	682b      	ldr	r3, [r5, #0]
 800145e:	b103      	cbz	r3, 8001462 <_sbrk_r+0x1a>
 8001460:	6023      	str	r3, [r4, #0]
 8001462:	bd38      	pop	{r3, r4, r5, pc}
 8001464:	2000009c 	.word	0x2000009c

08001468 <__sread>:
 8001468:	b510      	push	{r4, lr}
 800146a:	460c      	mov	r4, r1
 800146c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001470:	f000 f8a0 	bl	80015b4 <_read_r>
 8001474:	2800      	cmp	r0, #0
 8001476:	bfab      	itete	ge
 8001478:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800147a:	89a3      	ldrhlt	r3, [r4, #12]
 800147c:	181b      	addge	r3, r3, r0
 800147e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001482:	bfac      	ite	ge
 8001484:	6563      	strge	r3, [r4, #84]	; 0x54
 8001486:	81a3      	strhlt	r3, [r4, #12]
 8001488:	bd10      	pop	{r4, pc}

0800148a <__swrite>:
 800148a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800148e:	461f      	mov	r7, r3
 8001490:	898b      	ldrh	r3, [r1, #12]
 8001492:	05db      	lsls	r3, r3, #23
 8001494:	4605      	mov	r5, r0
 8001496:	460c      	mov	r4, r1
 8001498:	4616      	mov	r6, r2
 800149a:	d505      	bpl.n	80014a8 <__swrite+0x1e>
 800149c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014a0:	2302      	movs	r3, #2
 80014a2:	2200      	movs	r2, #0
 80014a4:	f000 f868 	bl	8001578 <_lseek_r>
 80014a8:	89a3      	ldrh	r3, [r4, #12]
 80014aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014ae:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80014b2:	81a3      	strh	r3, [r4, #12]
 80014b4:	4632      	mov	r2, r6
 80014b6:	463b      	mov	r3, r7
 80014b8:	4628      	mov	r0, r5
 80014ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80014be:	f000 b817 	b.w	80014f0 <_write_r>

080014c2 <__sseek>:
 80014c2:	b510      	push	{r4, lr}
 80014c4:	460c      	mov	r4, r1
 80014c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014ca:	f000 f855 	bl	8001578 <_lseek_r>
 80014ce:	1c43      	adds	r3, r0, #1
 80014d0:	89a3      	ldrh	r3, [r4, #12]
 80014d2:	bf15      	itete	ne
 80014d4:	6560      	strne	r0, [r4, #84]	; 0x54
 80014d6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80014da:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80014de:	81a3      	strheq	r3, [r4, #12]
 80014e0:	bf18      	it	ne
 80014e2:	81a3      	strhne	r3, [r4, #12]
 80014e4:	bd10      	pop	{r4, pc}

080014e6 <__sclose>:
 80014e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014ea:	f000 b813 	b.w	8001514 <_close_r>
	...

080014f0 <_write_r>:
 80014f0:	b538      	push	{r3, r4, r5, lr}
 80014f2:	4d07      	ldr	r5, [pc, #28]	; (8001510 <_write_r+0x20>)
 80014f4:	4604      	mov	r4, r0
 80014f6:	4608      	mov	r0, r1
 80014f8:	4611      	mov	r1, r2
 80014fa:	2200      	movs	r2, #0
 80014fc:	602a      	str	r2, [r5, #0]
 80014fe:	461a      	mov	r2, r3
 8001500:	f7fe feed 	bl	80002de <_write>
 8001504:	1c43      	adds	r3, r0, #1
 8001506:	d102      	bne.n	800150e <_write_r+0x1e>
 8001508:	682b      	ldr	r3, [r5, #0]
 800150a:	b103      	cbz	r3, 800150e <_write_r+0x1e>
 800150c:	6023      	str	r3, [r4, #0]
 800150e:	bd38      	pop	{r3, r4, r5, pc}
 8001510:	2000009c 	.word	0x2000009c

08001514 <_close_r>:
 8001514:	b538      	push	{r3, r4, r5, lr}
 8001516:	4d06      	ldr	r5, [pc, #24]	; (8001530 <_close_r+0x1c>)
 8001518:	2300      	movs	r3, #0
 800151a:	4604      	mov	r4, r0
 800151c:	4608      	mov	r0, r1
 800151e:	602b      	str	r3, [r5, #0]
 8001520:	f000 f85a 	bl	80015d8 <_close>
 8001524:	1c43      	adds	r3, r0, #1
 8001526:	d102      	bne.n	800152e <_close_r+0x1a>
 8001528:	682b      	ldr	r3, [r5, #0]
 800152a:	b103      	cbz	r3, 800152e <_close_r+0x1a>
 800152c:	6023      	str	r3, [r4, #0]
 800152e:	bd38      	pop	{r3, r4, r5, pc}
 8001530:	2000009c 	.word	0x2000009c

08001534 <_fstat_r>:
 8001534:	b538      	push	{r3, r4, r5, lr}
 8001536:	4d07      	ldr	r5, [pc, #28]	; (8001554 <_fstat_r+0x20>)
 8001538:	2300      	movs	r3, #0
 800153a:	4604      	mov	r4, r0
 800153c:	4608      	mov	r0, r1
 800153e:	4611      	mov	r1, r2
 8001540:	602b      	str	r3, [r5, #0]
 8001542:	f000 f851 	bl	80015e8 <_fstat>
 8001546:	1c43      	adds	r3, r0, #1
 8001548:	d102      	bne.n	8001550 <_fstat_r+0x1c>
 800154a:	682b      	ldr	r3, [r5, #0]
 800154c:	b103      	cbz	r3, 8001550 <_fstat_r+0x1c>
 800154e:	6023      	str	r3, [r4, #0]
 8001550:	bd38      	pop	{r3, r4, r5, pc}
 8001552:	bf00      	nop
 8001554:	2000009c 	.word	0x2000009c

08001558 <_isatty_r>:
 8001558:	b538      	push	{r3, r4, r5, lr}
 800155a:	4d06      	ldr	r5, [pc, #24]	; (8001574 <_isatty_r+0x1c>)
 800155c:	2300      	movs	r3, #0
 800155e:	4604      	mov	r4, r0
 8001560:	4608      	mov	r0, r1
 8001562:	602b      	str	r3, [r5, #0]
 8001564:	f000 f848 	bl	80015f8 <_isatty>
 8001568:	1c43      	adds	r3, r0, #1
 800156a:	d102      	bne.n	8001572 <_isatty_r+0x1a>
 800156c:	682b      	ldr	r3, [r5, #0]
 800156e:	b103      	cbz	r3, 8001572 <_isatty_r+0x1a>
 8001570:	6023      	str	r3, [r4, #0]
 8001572:	bd38      	pop	{r3, r4, r5, pc}
 8001574:	2000009c 	.word	0x2000009c

08001578 <_lseek_r>:
 8001578:	b538      	push	{r3, r4, r5, lr}
 800157a:	4d07      	ldr	r5, [pc, #28]	; (8001598 <_lseek_r+0x20>)
 800157c:	4604      	mov	r4, r0
 800157e:	4608      	mov	r0, r1
 8001580:	4611      	mov	r1, r2
 8001582:	2200      	movs	r2, #0
 8001584:	602a      	str	r2, [r5, #0]
 8001586:	461a      	mov	r2, r3
 8001588:	f000 f83e 	bl	8001608 <_lseek>
 800158c:	1c43      	adds	r3, r0, #1
 800158e:	d102      	bne.n	8001596 <_lseek_r+0x1e>
 8001590:	682b      	ldr	r3, [r5, #0]
 8001592:	b103      	cbz	r3, 8001596 <_lseek_r+0x1e>
 8001594:	6023      	str	r3, [r4, #0]
 8001596:	bd38      	pop	{r3, r4, r5, pc}
 8001598:	2000009c 	.word	0x2000009c

0800159c <__malloc_lock>:
 800159c:	4801      	ldr	r0, [pc, #4]	; (80015a4 <__malloc_lock+0x8>)
 800159e:	f7ff bdfb 	b.w	8001198 <__retarget_lock_acquire_recursive>
 80015a2:	bf00      	nop
 80015a4:	20000094 	.word	0x20000094

080015a8 <__malloc_unlock>:
 80015a8:	4801      	ldr	r0, [pc, #4]	; (80015b0 <__malloc_unlock+0x8>)
 80015aa:	f7ff bdf6 	b.w	800119a <__retarget_lock_release_recursive>
 80015ae:	bf00      	nop
 80015b0:	20000094 	.word	0x20000094

080015b4 <_read_r>:
 80015b4:	b538      	push	{r3, r4, r5, lr}
 80015b6:	4d07      	ldr	r5, [pc, #28]	; (80015d4 <_read_r+0x20>)
 80015b8:	4604      	mov	r4, r0
 80015ba:	4608      	mov	r0, r1
 80015bc:	4611      	mov	r1, r2
 80015be:	2200      	movs	r2, #0
 80015c0:	602a      	str	r2, [r5, #0]
 80015c2:	461a      	mov	r2, r3
 80015c4:	f000 f828 	bl	8001618 <_read>
 80015c8:	1c43      	adds	r3, r0, #1
 80015ca:	d102      	bne.n	80015d2 <_read_r+0x1e>
 80015cc:	682b      	ldr	r3, [r5, #0]
 80015ce:	b103      	cbz	r3, 80015d2 <_read_r+0x1e>
 80015d0:	6023      	str	r3, [r4, #0]
 80015d2:	bd38      	pop	{r3, r4, r5, pc}
 80015d4:	2000009c 	.word	0x2000009c

080015d8 <_close>:
 80015d8:	4b02      	ldr	r3, [pc, #8]	; (80015e4 <_close+0xc>)
 80015da:	2258      	movs	r2, #88	; 0x58
 80015dc:	601a      	str	r2, [r3, #0]
 80015de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015e2:	4770      	bx	lr
 80015e4:	2000009c 	.word	0x2000009c

080015e8 <_fstat>:
 80015e8:	4b02      	ldr	r3, [pc, #8]	; (80015f4 <_fstat+0xc>)
 80015ea:	2258      	movs	r2, #88	; 0x58
 80015ec:	601a      	str	r2, [r3, #0]
 80015ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015f2:	4770      	bx	lr
 80015f4:	2000009c 	.word	0x2000009c

080015f8 <_isatty>:
 80015f8:	4b02      	ldr	r3, [pc, #8]	; (8001604 <_isatty+0xc>)
 80015fa:	2258      	movs	r2, #88	; 0x58
 80015fc:	601a      	str	r2, [r3, #0]
 80015fe:	2000      	movs	r0, #0
 8001600:	4770      	bx	lr
 8001602:	bf00      	nop
 8001604:	2000009c 	.word	0x2000009c

08001608 <_lseek>:
 8001608:	4b02      	ldr	r3, [pc, #8]	; (8001614 <_lseek+0xc>)
 800160a:	2258      	movs	r2, #88	; 0x58
 800160c:	601a      	str	r2, [r3, #0]
 800160e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001612:	4770      	bx	lr
 8001614:	2000009c 	.word	0x2000009c

08001618 <_read>:
 8001618:	4b02      	ldr	r3, [pc, #8]	; (8001624 <_read+0xc>)
 800161a:	2258      	movs	r2, #88	; 0x58
 800161c:	601a      	str	r2, [r3, #0]
 800161e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001622:	4770      	bx	lr
 8001624:	2000009c 	.word	0x2000009c

08001628 <_sbrk>:
 8001628:	4b04      	ldr	r3, [pc, #16]	; (800163c <_sbrk+0x14>)
 800162a:	6819      	ldr	r1, [r3, #0]
 800162c:	4602      	mov	r2, r0
 800162e:	b909      	cbnz	r1, 8001634 <_sbrk+0xc>
 8001630:	4903      	ldr	r1, [pc, #12]	; (8001640 <_sbrk+0x18>)
 8001632:	6019      	str	r1, [r3, #0]
 8001634:	6818      	ldr	r0, [r3, #0]
 8001636:	4402      	add	r2, r0
 8001638:	601a      	str	r2, [r3, #0]
 800163a:	4770      	bx	lr
 800163c:	2000008c 	.word	0x2000008c
 8001640:	200000a0 	.word	0x200000a0

08001644 <_init>:
 8001644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001646:	bf00      	nop
 8001648:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800164a:	bc08      	pop	{r3}
 800164c:	469e      	mov	lr, r3
 800164e:	4770      	bx	lr

08001650 <_fini>:
 8001650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001652:	bf00      	nop
 8001654:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001656:	bc08      	pop	{r3}
 8001658:	469e      	mov	lr, r3
 800165a:	4770      	bx	lr
